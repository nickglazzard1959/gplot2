*DECK DMULTI F
      SUBROUTINE DMULTI(DEV,MFRAME)
C
C    DICOMED DEVICE SPECIFIC CONTROL -
C    SETS MULTI-FRAMING FOR SPECIFIED DEVICE (IF ACTIVE)
C    FOR DEV = 'ALL' ALL ACTIVE DICOMED DEVICES
C    NOTE:  ACTION IS DEFERRED UNTIL NEXT FRAME ADVANCE IS
C           EXECUTED.  FOR IMMEDIATE ACTION, REFERENCE TO
C           DMULTI SHOULD IMMEDIATELY PRECEDE FRAME.
C    THE VALUE OF MFRAME DETERMINES THE NUMBER OF REPEAT FRAMES
C    I.E.   2 TURNS ON DOUBLE FRAMING
C           N YIELDS N (TOTAL) COPIES OF EACH FRAME
C           1 IS SINGLE FRAMING, AND IS EQUIVALENT TO:
C           0 WHICH CANCELS MULTI-FRAMING (AFTER NEXT FRAME ADVANCE)
C    DSET MAY BE USED FOR SINGLE/DOUBLE FRAMING OPTIONS.
C
C    ************************************************************
C    NOTE:  MFRAME IS NOT A REPEAT COUNT.  IT IS NOT ADDITIONAL
C           TO THE ORIGINAL FRAME BUT IS THE ACTUAL NUMBER
C           OF IDENTICAL FRAMES THAT WILL BE PRODUCED.
C           (THIS NOTE IS FOR CLARIFICATION - IN PARTICULAR,
C            FOR THOSE WITH MEMORIES OF CALCOMPS REPEAT COUNT!)
C    ************************************************************
C
      CHARACTER*(*) DEV
      PARAMETER (NDEVS=5)
      CHARACTER*6 DDEVS(0:NDEVS),CERR
*CALL,DFXC00
*CALL,DFXC05A
      DATA DDEVS/'ALL','D35','D16','D35P','D35C','D16C'/
      ROUTIN = 'DMULTI'
*CALL,RIN
      ICODE = -2008
      MFRAM = MFRAME
      IF (MFRAME.LT.0) MFRAM = 0
      IF (MFRAME.GT.5) MFRAM = 5
      IF ((MFRAME.LT.0).OR.(MFRAME.GT.5)) THEN
          IF (ICHECK.GT.0) WRITE(ERRREC,12) MFRAME,MFRAM
*CALL,LINOUT0
   12 FORMAT(1H0,'**DIMFILM WARNING** DMULTI REFERENCED WITH INVALID REP
     1EAT COUNT ',I6,' MULTI FRAMING WILL DEFAULT TO ',I6)
      ENDIF
C    ADJUST COUNT FOR DIMFILM STACKER (WHERE COUNT IS REPEAT COUNT
C    ADDITIONAL TO ORIGINAL FRAME, AND ZERO CANCELS IT)
      IF (MFRAM.GT.0) MFRAM = MFRAM - 1
      DO 1 I=0,NDEVS
      IF (DEV.EQ.DDEVS(I)) GO TO 2
    1 CONTINUE
C    NO MATCH FOR DEVICE
      IF (ICHECK.GT.0) WRITE(ERRREC,10) DEV
*CALL,LINOUT0
   10 FORMAT(1H0,'**DIMFILM WARNING** DMULTI REFERENCED WITH INVALID DEV
     1ICE ',A,'; CALL IGNORED')
      GO TO 99
    2 IF (I.EQ.0) THEN
          JERR = 0
          DO 3 J=1,NDEVS
          CALL DFX01I(DDEVS(J),ICODE,MFRAM,.FALSE.,IERR)
    3     JERR = MAX(JERR,IERR)
          IF (JERR.EQ.0) GO TO 99
          CERR = 'ACTIVE'
          IF (JERR.EQ.-2) CERR = 'OPEN'
          IF (ICHECK.GT.0) WRITE(ERRREC,11) CERR
*CALL,LINOUT0
   11 FORMAT(1H0,'**DIMFILM WARNING** DMULTI REFERENCED FOR ALL RELEVANT
     1 DEVICES FOUND NONE ',A,'; CALL IGNORED')
      ELSE
          CALL DFX01I(DEV,ICODE,MFRAM,.TRUE.,IERR)
      ENDIF
   99 CONTINUE
*CALL,ROUT
      RETURN
      END
