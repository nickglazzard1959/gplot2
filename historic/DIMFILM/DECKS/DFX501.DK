*DECK DFX501 F
      SUBROUTINE DFX501(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ETYPE,ARC)
      INTEGER ETYPE
      LOGICAL ARC
C    ETYPE INDICATES ARGUMENT FORM
C    ETYPE = 1 - ARG1,ARG2 = X0,Y0   ARG3,ARG4 = A,B
C                ARG5,ARG6 = THETA1,THETA2  ARG7 = PSI2
C                (I.E. DEFINITION IN TERMS OF CENTRE AND SEMI-AXES)
C
C           =2 - ARG1,ARG2 = XF,YF   ARG3 = E  ARG4 = SLR
C                ARG5,ARG6 = PHI1,PHI2   ARG7 = PSI
C                (ANGULAR GROUPS 2               3  RESPECTIVELY)
C                (I.E. DEFINITION IN TERMS OF FOCUS, ECCENTRICITY,
C                      SEMILATUS-RECTUM)
C
C        DIAGNOSTICS MUST TAKE ACCOUNT OF ETYPE
C
C
C    ARC = .TRUE. REFERENCE IS FOR ARC
C          .FALSE. REFERENCE IS FOR WHOLE ELLIPSE
C
*CALL,DFXC00
      LOGICAL INC,WCHOLD
*CALL,DFXC03
*CALL,DFXC05
*CALL,DFXCD0
C    ALL COORDINATES ARE IN TRANSLATED AND ROTATED FRAME - CONVERSION
C    TO USERS PLOT COORDS OCCURS ONLY AT TIME OF CALLS TO ON2 ETC.
      INC(QD) = (QD.GE.DMIN.AND.QD.LE.DMAX)
     1   .OR.((QD-TWOPI).GE.DMIN.AND.(QD-TWOPI).LE.DMAX)
C    FIRST MUST GET ARGUMENTS INTO ETYPE1 FORM FOR ALL COMPUTATIONS
      IF (ETYPE.EQ.1) THEN
            X0 = ARG1
            Y0 = ARG2
            A = ARG3
            B = ARG4
            THETA1 = ARG5
            THETA2 = ARG6
            PSI2 = ARG7
      ELSE
            IF (ARG3.LE.0.0.OR.ARG3.GE.1.0) GO TO 101
            SLR = ARG4
            IF (SLR.LT.0.0) GO TO 102
            A = SLR/(1. - ARG3*ARG3)
            X0 = ARG1 - A*ARG3
            Y0 = ARG2
            C = COS(ARG5*ANGCON(1,ANGRP(2)))
            R = ARG4/(1. + ARG3*C)
            THETA1 = ACOS(R*C + A*ARG3)*ANGCON(2,ANGRP(3))
            C = COS(ARG6*ANGCON(1,ANGRP(2)))
            R = ARG4/(1. + ARG3*C)
            THETA2 = ACOS(R*C + A*ARG3)*ANGCON(2,ANGRP(3))
            B = SQRT(ARG4*A)
            PSI2 = ARG7
      ENDIF
      IF ((A.LT.0.0).OR.(B.LT.0.0)) GO TO 11
C    THIS ERROR SHOULD ONLY OCCUR FOR ETYPE1
      IF (ARC) GO TO 5
      DEG = 0.0
    4 DEGS = TWOPI
      IF (THETA2.LT.THETA1) DEGS = -TWOPI
      DEGEND = DEG + DEGS
C    THIS APPARENTLY REDUNDANT COMPUTATION FORCES ELLIPSE TO BEGIN AT
C    THE INITIAL POINT AND SO PASS THROUGH THAT POINT (OTHERWISE THE
C    STRAIGHT LINE SEGMENTS MAY FAIL TO DO SO).
      XFIRST = A*COS(DEG)
      XLAST = XFIRST
      YFIRST = B*SIN(DEG)
      YLAST = YFIRST
      GO TO 1
    5 TA1 = THETA1*ANGCON(1,ANGRP(3))
      DEG = DFX004(TA1)
      DEGS = THETA2 - THETA1
      DEGS = DEGS*ANGCON(1,ANGRP(3))
      IF (ABS(DEGS).GE.TWOPI) GO TO 4
      IF (DEGS.EQ.0.0) GO TO 99
      XFIRST = A*COS(DEG)
      YFIRST = B*SIN(DEG)
      DEGEND = DEG + DEGS
      XLAST = A*COS(DEGEND)
      YLAST = B*SIN(DEGEND)
    1 PSI = PSI2*ANGCON(1,ANGRP(3))
      X0R = X0*CALPHA - Y0*SALPHA
      Y0R = X0*SALPHA + Y0*CALPHA
      XP = XPOS
      YP = YPOS
      CALL DFX000(200,XSAVE,YSAVE,ZDUMMY,0)
      ICSAVE = ICHECK
      IF (ICHECK.EQ.2) ICHECK = -2
      I1CNT = IOBCNT
      CHOLD = CALPHA
      SHOLD = SALPHA
      WCHOLD = WCTR
      X0TS = X0T
      Y0TS = Y0T
      P = PSI+ALPHA
      IF (A.EQ.0.0.OR.B.EQ.0.0) GO TO 10
      CALPHA = COS(P)
      SALPHA = SIN(P)
      X0T = X0T + X0R
      Y0T = Y0T + Y0R
      WCTR = .TRUE.
      CALL DFX110(XFIRST,YFIRST)
      I2 = INT(ABS(DEGS)/ANGSTP)
      IF (I2.EQ.0) GO TO 6
      COSTHT = XFIRST/A
      SINTHT = YFIRST/B
      COSANG = COS(ANGSTP)
      SINANG = SIN(ANGSTP)
C    ENSURE CORRECT DIRECTION OF PLOT
      IF (DEGS.LT.0.0) SINANG = -SINANG
      DO 2 I=1,I2
      COST = COSTHT*COSANG - SINTHT*SINANG
      SINTHT = SINTHT*COSANG + COSTHT*SINANG
      COSTHT = COST
      X = A*COSTHT
      Y = B*SINTHT
    2 CALL DFX124(X,Y)
C    NOTE THAT FINAL POINT IS TRUE POINT - THIS IS RELEVANT FOR MOVIE
C    PRODUCTIONS OF GROWING ELLIPSE AS THIS POINT WILL BE LIABLE TO
C    "WANDER" AS IT IS NOT INTERPOLATED ALONG LAST SEGMENT.  THIS IS
C    GENERALLY NOT NOTICEABLE WITH LOWER VALUES OF ANGSTP.  THIS
C    TREATMENT IS DESIRABLE AS BOTH EXTREMA ARE ON THE ACTUAL ELLIPSE,
C    AND SO ARE DIRECTLY AVAILABLE TO THE USER.
    6 CALL DFX124(XLAST,YLAST)
    7 CALL DFX000(200,XSAVE,YSAVE,ZDUMMY,1)
      X0T = X0TS
      Y0T = Y0TS
      WCTR = WCHOLD
      XPOS = XP
      YPOS = YP
      CALPHA = CHOLD
      SALPHA = SHOLD
      I2CNT = IOBCNT
      ICHECK = ICSAVE
      IF (I2CNT.EQ.I1CNT) GO TO 99
      IF (ICHECK.EQ.2) THEN
             IF (ETYPE.EQ.1) WRITE(ERRREC,20)ROUTIN,X0,Y0,A,B
   20 FORMAT(1H0,'**DIMFILM WARNING**  OUT OF BOUNDS DETECTED DURING CAL
     1L OF ',A/1H ,21X,'CENTRED AT (',1PE16.8,',',E16.8,')'/1H ,21X,
     2  'WITH SEMI-MAJOR/MINOR AXES - ',E16.8,2X,E16.8)
             IF (ETYPE.EQ.2) WRITE(ERRREC,22)ROUTIN,ARG1,ARG2,ARG3,ARG4
   22 FORMAT(1H0,'**DIMFILM WARNING**  OUT OF BOUNDS DETECTED DURING CAL
     1L OF ',A/1H ,21X,'FOCUS (',1PE16.8,',',E16.8,')'/1H ,21X,
     2   'ECCENTRICITY ',E16.8,', SEMI-LATUS RECTUM ',E16.8)
*CALL,LINOUT1
      ENDIF
   99 CONTINUE
  100 RETURN
   10 CALL DFX134(X0R,Y0R)
      DMIN = AMIN1(DEG,DEGEND)
      DMAX = AMAX1(DEG,DEGEND)
      ICCS = ICSAVE
      ICHECK = ICSAVE
      IF (ICHECK.GT.0) THEN
            IF (ETYPE.EQ.1) WRITE(ERRREC,21)ROUTIN,A,B,X0,Y0
   21 FORMAT(1H0,'**DIMFILM WARNING**  A ZERO SEMI-AXIS WAS DETECTED IN
     1CALL OF ',A/1H ,21X,'SEMI-MAJOR/MINOR AXES WERE -',1P2E16.8/
     21H ,21X,'FOR ELLIPSE CENTRED AT (',1PE16.8,',',E16.8,')'/
     31H ,21X,'A CENTRAL POINT OR RELEVANT SEMI-AXES WILL BE PLOTTED')
            IF (ETYPE.EQ.2) WRITE(ERRREC,23)ROUTIN,ARG1,ARG2,ARG3,ARG4
   23 FORMAT(1H0,'**DIMFILM WARNING**  REFERENCE TO ',A,' YIELDS POINT R
     1EPRESENTATION OF ELLIPSE ONLY'/1H ,21X,'FOCUS (',1PE16.8,',',
     2E16.8,'), ECCENTRICITY ',E16.8,', SEMI-LATUS RECTUM ',E16.8)
*CALL,LINOUT0
      ENDIF
      ICHECK = ICCS
      IF (ETYPE.EQ.2) GO TO 13
      X1 = 0.0
      X2 = 0.0
      Y1 = 0.0
      Y2 = 0.0
      IF (A.NE.0.0) GO TO 12
      IF (B.EQ.0.0) GO TO 13
C    A = 0., B > 0.   TRY AND PLOT SEMI-MINOR AXIS
      Y1 = B
      Y2 = -B
      IF (INC(PIBY2)) GO TO 15
      Y1 = 0.0
   15 IF (INC(3.*PIBY2)) GO TO 16
      Y2 = 0.0
   16 IF (Y1.EQ.Y2) GO TO 13
   14 CPSI = COS(PSI)
      SPSI = SIN(PSI)
      XFIRST = X1*CPSI - Y1*SPSI
      YFIRST = X1*SPSI + Y1*CPSI
      XLAST = X2*CPSI - Y2*SPSI
      YLAST = X2*SPSI + Y2*CPSI
      CALL DFX110(XFIRST,YFIRST)
      GO TO 6
C    B = 0., A > 0.   TRY AND PLOT SEMI-MAJOR AXIS
   12 X1 = A
      X2 = -A
      IF (INC(0.0)) GO TO 17
      X1 = 0.0
   17 IF (INC(2.*PIBY2)) GO TO 18
      X2 = 0.0
   18 IF (X1.EQ.X2) GO TO 13
      GO TO 14
   13 CALL DFX129(0.0,0.0)
      GO TO 7
   11 IF (ICHECK.GT.0) WRITE(ERRREC,19)ROUTIN,A,B,X0,Y0
   19 FORMAT(1H0,'**DIMFILM WARNING**  ILLEGAL SEMI-AXIS VALUE IN CALL O
     1F ',A/1H ,21X,'SEMI-MAJOR/MINOR AXES WERE -',1P2E16.8/
     21H ,21X,'FOR ELLIPSE CENTRED AT (',1PE16.8,',',E16.8,','/
     31H ,21X,'CALL IGNORED')
*CALL,LINOUT0
      GO TO 100
  101 IF (ICHECK.GT.0) WRITE(ERRREC,103) ROUTIN,
     1   'ECCENTRICITY (THIRD',ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7
*CALL,LINOUT0
  103 FORMAT(1H0,'**DIMFILM WARNING**  ',A,' CALLED WITH ILLEGAL VALUE
     1FOR ',A,' ARGUMENT), CALLED WITH -'/1H ,21X,
     2  1P7E14.5/1H ,21X,'CALL IGNORED')
      GO TO 100
  102 IF (ICHECK.GT.0) WRITE(ERRREC,103) ROUTIN,
     1   'SEMI-LATUS RECTUM (FOURTH',ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7
*CALL,LINOUT0
      GO TO 100
      END
