*DECK COS01J F
      SUBROUTINE DFX01J
C    THIS IS SET OF ROUTINES FOR HANDLING USE TAPE FACILITIES FOR
C    DIMFILM ON THE CRAY
C    EXTENDED FOR UNICOS   -  JOHN GILBERT  MAY 1990
C
C
C    THREE ENTRIES DFX01K/L/M CORRESPOND TO DFXNNA/B/C, WHILE THE
C    MAIN ENTRY DFX01J CORRESPONDS TO DFXNND, FOR RELEVANT DEVICES
C            - SEE DFXUT1 FOR INTERPRETATION OF VSN/UTFLAG
C
      PARAMETER (NCW=4 , UBCW=32)
*CALL,DFXPAB
*CALL,DFXCBA
*CALL,DFXCBD
*CALL,COSCUT
      INTEGER RBUFF(510),UBC,DTYPE,BUFFPT,WAIT
      INTEGER CBUFF(NCW),FLAG1,RCOUNT,BYTES(MSOPWS),FRAME(MSOPWS)
      INTEGER DN,ODN(5),RDN(5),GDN(5),BDN(5)
      CHARACTER*(*) SHBLK1,SHBLK2
      CHARACTER*110 JCL
      CHARACTER*8 UCSODN
      INTEGER TEMP
      INTEGER NUBC(0:3)
      LOGICAL FTCHAN(MSOPWS),DFRAME(MSOPWS),SBLOCK(MSOPWS)
      DATA    FTCHAN/MSOPWS*.FALSE./,DFRAME/MSOPWS*.FALSE./
      DATA      NUBC /0,48,32,16/
      DATA JCL/         'UNIT=TAPE,LABEL=(1,SL,,OUT),DSN=DUMMY,DISP=NEW,
     1DCB=(RECFM=U,BLKSIZE=4096,DEN=3),VOL=SER='/
      DATA MASK1 /1777777777740077777777 B/,
     +     RMASK /0000000000012200000000 B/,
     +     GMASK /0000000000010700000000 B/,
     +     BMASK /0000000000010200000000 B/
      ENTRY DFX01K(DN,SHBLK1,SHBLK2,IERR)
      IERR=0
      FTCHAN(NWS) = .FALSE.
      DFRAME(NWS) = .FALSE.
      SBLOCK(NWS) = .TRUE.
      IF ((UTFLAG(NWS).EQ.13).OR.(UTFLAG(NWS).EQ.3).OR.
     1    (UTFLAG(NWS).EQ.4)) SBLOCK(NWS) = .FALSE.
      FRAME(NWS) = 0
      BYTES(NWS) = 0
      IF (UTFLAG(NWS).GT.10) THEN
        FTCHAN(NWS)=.TRUE.
        READ(UTVSN(NWS)(4:5),'(I2)') ODN(NWS)
      ELSE
        ODN(NWS)=DN
      ENDIF
      DN=DN.AND.MASK1
      RDN(NWS)=DN.OR.RMASK
      GDN(NWS)=DN.OR.GMASK
      BDN(NWS)=DN.OR.BMASK
C
C... WRITE SHORT BLOCKS TO DATA SET (UNLESS ?FT)
C
      IF (SBLOCK(NWS)) THEN
              CALL WRITE(ODN(NWS),SHBLK1,3,32)
C
              CALL WRITE(ODN(NWS),SHBLK2,17,48)
              BYTES(NWS)=150
      ENDIF
      RETURN
C-------------------------------------------------------------------
      ENTRY DFX01L(RBUFF,BUFFPT,DTYPE)
      NW=((BUFFPT-1)/4)+1
      UBC=NUBC(MOD(BUFFPT,4))
      GOTO (10,11,12,99,14), DTYPE+1
   99 IERR=-1
      RETURN
C... RED DATA RECORDS
   11 CALL WRITE(ODN(NWS),RBUFF,NW,UBC)
      BYTES(NWS)=BYTES(NWS)+NW*8+(64-UBC)/8
      IF (DFRAME(NWS)) WRITE(RDN(NWS)) NW,UBC,(RBUFF(I),I=1,NW)
      RETURN
C... GREEN DATA RECORDS
   12 WRITE(GDN(NWS)) NW,UBC,(RBUFF(I),I=1,NW)
      RETURN
C... BLUE DATA RECORDS
   14 WRITE(BDN(NWS)) NW,UBC,(RBUFF(I),I=1,NW)
      RETURN
C
C... CONTROL BLOCK
C
C... SAVE INFORMATION TO FREE RBUFF FOR COPYING OPERATIONS
C
   10 DO 100 I=1,NCW
  100 CBUFF(I)=RBUFF(I)
C... READ CONTROL BLOCK FLAGS
      CALL DFX01N(CBUFF,FLAG1,RCOUNT)
      IF (FLAG1.EQ.8) THEN
C    IF FRAME ADVANCE INCREMENT LOCAL FRAME COUNT
C    (DONE HERE AS RCOUNT WILL DECREMENT - DEPENDS ON RCOUNT
C     BEING CORRECTLY SET IN EACH CONTROL BLOCK)
         FRAME(NWS) = FRAME(NWS) + 1 + RCOUNT
      ENDIF
      IF (FLAG1.EQ.16) GOTO 200
C... START/END DOUBLE FRAMING
      IF      (FLAG1.EQ.1) THEN
        DFRAME(NWS)=.TRUE.
        GOTO 200
      ELSE IF (FLAG1.EQ.2) THEN
        DFRAME(NWS)=.FALSE.
        GOTO 200
      ENDIF
C... COPY RED RECORDS IF DOUBLE FRAMING
      IF (.NOT.DFRAME(NWS)) GOTO 140
  130 CALL DFX01O(RDN(NWS),ODN(NWS),BYTES(NWS))
      RCOUNT=RCOUNT-1
C... COPY GREEN AND BLUE RECORDS
  140 CALL DFX01O(GDN(NWS),ODN(NWS),BYTES(NWS))
      CALL DFX01O(BDN(NWS),ODN(NWS),BYTES(NWS))
C... CONTROL BLOCK IS NOT COPIED TO TAPE
  150 CONTINUE
      IF (DFRAME(NWS).AND.RCOUNT.GT.0) GOTO 130
      REWIND RDN(NWS)
      REWIND GDN(NWS)
      REWIND BDN(NWS)
      RETURN
C
C... HERE FOR CODES 1,2 AND 16 - CONTROL BLOCK NOT WRITTEN TO TAPE
C
  200 CONTINUE
      RETURN
C------------------------------------------------------------------
      ENTRY DFX01M(NBYTE,SHBLK1,SHBLK2,WAIT,IERR)
C
C... COPY ACCOUNTING BLOCKS AGAIN (WITH MINOR CHANGES)
C
      SHBLK1(4:4)='E'
      WRITE(SHBLK2(131:135),201) FRAME
  201 FORMAT(I5)
C
C... WRITE SHORT BLOCKS TO DATA SET (UNLESS ?FT)
C
      IF (SBLOCK(NWS)) THEN
              CALL WRITE(ODN(NWS),SHBLK1,3,32)
C
              CALL WRITE(ODN(NWS),SHBLK2,17,8)
              BYTES(NWS) = BYTES(NWS) + 155
      ENDIF
      NBYTE=BYTES(NWS)
C
C... DISPOSE PLOT FILE
C
       REWIND ODN(NWS)
      IF (.NOT.FTCHAN(NWS)) THEN
         JCL(89:) = UTVSN(NWS)
C    DEFAULT IS STANDARD LABELS (UTFLAG=2 OR 4)
C    RESET IF NO LABELS SELECTED (UTFLAG=1 OR 3)
         IF ((UTFLAG(NWS).EQ.1).OR.(UTFLAG(NWS).EQ.3)) JCL(20:21)='NL'
*IF DEF,UNICOS
      DO 1 I=1,8
      TEMP = SHIFT(ODN(NWS),8*I).AND.77B
      IF (TEMP.EQ.0) GO TO 2
    1 UCSODN(I:I) = CHAR(TEMP)
    2 IF (I.EQ.1) THEN
C    MUST BE FTxx - SO HANDLE APPROPRIATELY???????
      ELSE
C    HAVE CHARACTER BASED DN, SO
          IERR = ISHELL('dispose /$tmpdir/'//ucsodn(1:i-1)//
     1           '-d mt -m m1 -f bb -t '//JCL)
*ELSE
*/  MUST BE COS
         CALL DISPOSE (IERR,
     +              'DN'L    , ODN(NWS),
     +              'DC'L    , 'MT'L   ,
     +              'MF'L    , 'VS'L   ,
     +              'DF'L    , 'BB'L   ,
     +              'TEXT'L  , JCL     ,
     +              WAIT                 )
*ENDIF
         IF (IERR.NE.0) CALL DFXMSA(IERR)
      ENDIF
      ENDIF
      RETURN
      END
