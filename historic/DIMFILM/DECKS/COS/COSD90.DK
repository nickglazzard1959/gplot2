*DECK COSD90 F
      SUBROUTINE DFXD90(IF,X,Y,Z,N)
C    DEVICE DRIVER FOR PRINTRONIX 300 - VERSION V0.0 *CRAY*
C    FORMAL INTERCHANGE FILE SPECIFICATION MAY BE CHANGED
C    THIS VERSION IS FIXED LENGTH HEXA-DECIMAL
C
C    DRIVER VERSION IS OF FORM NN.N
C
      CHARACTER*4 DVERSN
      PARAMETER (DVERSN=' 0.0')
      INTEGER BITS
      PARAMETER (BITS=64)
      PARAMETER (XDCMAX=72.0,YDCMAX=60.0)
      PARAMETER (NHDPI=60,NVDPI=72,NHDP=792,NVDP=792)
      PARAMETER (NROW=792,NCOL=(792+BITS-1)/BITS)
      PARAMETER (HSCALE=(NHDP-1)/XDCMAX)
      PARAMETER (VSCALE=(NVDP-1)/YDCMAX)
      PARAMETER (I4LOW=15,I2LOW=3)
      CHARACTER*4 C1
      CHARACTER*16 C2
      CHARACTER*40 C40
      CHARACTER*1 CFRAM
      INTEGER DUP,REP
      INTEGER FRAMES
      INTEGER IPOINT(NCOL,NROW)
C    HORIZONTALLY 60 POINTS/INCH, TOTAL 792 POINTS
C    VERTICALLY   72 POINTS/INCH, TOTAL 792 POINTS
*CALL,DFXPAB
*CALL,DFXCBA
*CALL,DFXCBD
*CALL,DFXCBF
*CALL,DFXCAC
*CALL,DFXCAD
*CALL,DFXC04
*CALL,DFXC05
*CALL,DFXC17
      CHARACTER*140 RECORD,REC1,REC2,OR1,OR2
      LOGICAL ZERO,CLOSE
      SAVE XDCO,YDCO,DSCALE
      LOGICAL BTEST
      DATA REC1(1:90)/'1         XX        DPLOT'/
C    NOTE - FOLLOWING DATA HAS BEEN REPLACED BY ASSIGNMENT TO
C           ACCOMMODATE DEFFICIENCY IN CFT 1.11
C     DATA REC1(91:) = /'DIMFILM V***** PRX300-D90:****'/
C
      DATA REC2/'          XX'/
      DATA C1/'4567'/,C2/'0123456789ABCDEF'/
C    HEX PAIRS FOR PLOT DATA FORCE BIT 7 SET
      DATA C40/'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-*/'/
C    REPLICATION/DUPLICATION COUNTS ARE BASE 40
C         - FIRST DIGIT 0:G,1:H,2:I,...,18:Y,19:Z
C         - SECOND DIGIT 0:A,1:B,2:C,...,38:*,39:/
C    THIS YIELDS RANGE 0-(20*40 - 1) - SUFFICIENT FOR PRINTRONIX 300
C    NON-STANDARD BOOLEAN FUNCTIONS REQUIRED
C    ANSI/ISA-S61.1-1976 BIT STRING MANIPULATION FUNCTIONS
C    BTEST, IBSET PROVIDED AS STATEMENT FUNCTIONS,
C    IAND, ISHFT (RESTRICTED TO RIGHT SHIFT, ZERO FILL) MAPPED
C    TO CRAY FUNCTIONS AND, SHIFTR
      BTEST(I1,I2) = AND(I1,(SHIFT(1,I2))).NE.0
      IBSET(I1,I2) = OR(I1,(SHIFT(1,I2)))
      NN = N
      IF (IF.LE.0) GO TO 1000
      IF (IF.EQ.1) GO TO 1
      IF (IF.EQ.2) GO TO 2
      IF (IF.EQ.4) GO TO 4
      IF (IF.EQ.204) GO TO 204
C    IGNORE ALL OTHER ENTRIES
      GO TO 9999
C    DO OFF MOVE (2 WITHOUT POINT, 1 WITH POINT)
    2 NN = 0
    1 XD = XDCO + X*DSCALE
      YD = YDCO + Y*DSCALE
  201 IXD1 = INT(XD*HSCALE + 0.5)
      IYD1 = INT(YD*VSCALE + 0.5)
      IF (NN.EQ.0) GO TO 9999
C    POINT HERE
      LENGTH = 1
      IXD2 = IXD1
      IYD2 = IYD1
      GO TO 400
C    DO ON MOVE
    4 XD = XDCO + X*DSCALE
      YD = YDCO + Y*DSCALE
  202 IXD2 = INT(XD*HSCALE + 0.5)
      IYD2 = INT(YD*VSCALE + 0.5)
  400 IF (DEVCOL(NWS)) THEN
                       ASSIGN 406 TO JUMP
                       GO TO 703
      ENDIF
  406 IF (ZERO) GO TO 403
      IXDIFF = IXD2 - IXD1
      IYDIFF = IYD2 - IYD1
      LENGTH = MAX(ABS(IXDIFF),ABS(IYDIFF)) + 1
      IF (ABS(IXDIFF).GE.ABS(IYDIFF)) THEN
                     IXINC = SIGN(1,IXDIFF)
                     YINC = FLOAT(IYDIFF)/FLOAT(LENGTH)
                     IXX = IXD1
                     YY = FLOAT(IYD1) + 0.5
                     DO 401 K=1,LENGTH
                     J = NVDP - INT(YY)
                     I = IXX
                     IW = (I/BITS) + 1
                     IB = BITS - (I - (IW-1)*BITS)
                     IF ((IW.LT.1).OR.(J.LT.1).OR.
     1               (IW.GT.NCOL).OR.(J.GT.NROW)) GO TO 402
                     IPOINT(IW,J) = IBSET(IPOINT(IW,J),IB-1)
  402                IXX = IXX + IXINC
  401                YY = YY + YINC
      ELSE
                     XINC = FLOAT(IXDIFF)/FLOAT(LENGTH)
                     IYINC = SIGN(1,IYDIFF)
                     XX =  FLOAT(IXD1) + 0.5
                     IYY = IYD1
                     DO 404 K=1,LENGTH
                     J = NVDP - IYY
                     I = INT(XX)
                     IW = (I/BITS) + 1
                     IB = BITS - (I - (IW-1)*BITS)
                     IF ((IW.LT.1).OR.(J.LT.1).OR.
     1               (IW.GT.NCOL).OR.(J.GT.NROW)) GO TO 405
                     IPOINT(IW,J) = IBSET(IPOINT(IW,J),IB-1)
  405                XX = XX + XINC
  404                IYY = IYY + IYINC
      ENDIF
      WSDSE(NWS) = .FALSE.
  403 IXD1 = IXD2
      IYD1 = IYD2
      GO TO 9999
  204 XD = X
      YD = Y
      IF (N.EQ.0) GO TO 201
C    NN = N FOR ENTRY 204 - THUS =0 ON BRANCH TO 201
      GO TO 202
C    SET COLOUR/INTENSITY - 199 NOT NOW USED
  199 ASSIGN 9999 TO JUMP
  703 DEVCOL(NWS) = .FALSE.
      II = ICOLPT(IRGBN)
      NC = NLUT(II)
      IF (NC.LT.0) THEN
C    HERE IF R,G,B
                      ZI = ZINT(II)*ZRGB(II)
                   ELSE
C    HERE IF LUT
                      ZI = DFX146(-NC)
      ENDIF
      ZERO = (ZI.EQ.0.0)
      GO TO JUMP,(406,9999)
 9999 RETURN
 1000 II = -IF
      GO TO (1001,1002,1003,1004),II
C    OPEN PLOT FILE
 1001 CALL DFXMS3(REC1(31:38))
      CALL DFXMS8(REC1(51:70))
      CALL DFXMS5(REC1(71:90))
C    SEE COMMENTS AT DATA STATEMENTS
C     REC1(91:) = 'DIMFILM/PRINTRONIX 300 V0.0'
      REC1(91:) = 'DIMFILM/*****  PRX300 D90:****'
C    PLUG DIMFILM VERSION/LEVEL
      RECORD(100:104) = VERSN
C    PLUG DEVICE DRIVER VERSION
      RECORD(117:120) = DVERSN
C
      CALL DFXMS4(REC2(31:38))
      CALL DFXMS2(REC2(42:49))
      CALL DFXMS1(REC2(52:59))
      CALL DFXMS6(REC2(101:120))
      FRAMES = 0
      CALL DFX90A('DPRX',50000,IFAIL)
C    SET 4-BYTE FORM ID, LINE LIMIT, GET ERROR CONDITION
      IF (IFAIL.EQ.0) GO TO 897
C    GKS ERROR 21 24 26 POSSIBLE
      GKSERR = 26
      ZERO = .TRUE.
      GO TO 9999
  897 WRITE(RECORD,899) REC1
      CALL DFX90B(RECORD)
      WRITE(RECORD,899) REC2
      CALL DFX90B(RECORD)
  899 FORMAT(A120)
      RECORD = ' PRINTRONIX STARTS'
      CALL DFX90B(RECORD)
      WSMDCS(1,NWS) = XDCMAX
      WSMDCS(2,NWS) = YDCMAX
      WSCAT(NWS) = 2
      WSDM(NWS) = 3
C    SET WS ID - SPECIFIC TO DEVICE
      WSID(NWS) = 90
      WSNAME(NWS) = 'PRX300'
C    SET UP DEFAULT WS TRANSFORMATION
      CWSWIN(1,NWS) = 0.0
      CWSWIN(2,NWS) = 1.0
      CWSWIN(3,NWS) = 0.0
      CWSWIN(4,NWS) = 1.0
      CWSVP(1,NWS) = 0.0
      CWSVP(2,NWS) = XDCMAX
      CWSVP(3,NWS) = 0.0
      CWSVP(4,NWS) = YDCMAX
      CLOSE = .FALSE.
      ZERO = .FALSE.
      GO TO 1004
C    CLOSE DEVICE
 1002 CLOSE = .TRUE.
      GO TO 7002
C    DECODE DOT MATRIX AND OUTPUT FRAME, THEN CLEAR MATRIX
 1003 CLOSE = .FALSE.
 7002 IF (WSDSE(NWS)) GO TO 7003
      DUP = 0
      IROW = 1
 7005 IWO = 2
      IBO = 0
      IBI = BITS - 1
      IWI = 1
      OR1 = ' 0'
      OR2 = ' 5'
      REP = 0
      IVAL = 0
      IVLAST = -1000
C    OUTPUT WORD IWO, BIT IBO
C    INPUT WORD IWI, BIT IBI
C    NOTE - REVERSAL EACH 6-BITS, SEVENTH BIT ALWAYS SET
      DO 7000 I=1,NHDP
      IF (BTEST(IPOINT(IWI,IROW),IBI)) IVAL = IBSET(IVAL,IBO)
      IBO = IBO + 1
      IF ((IBO.EQ.6).OR.((I.EQ.NHDP).AND.(IBO.NE.0))) THEN
C    IF 6-BITS DATA ACCUMULATED OUTPUT,
C    OR IF END OF ROW FORCE OUTPUT OF REMAINING BITS
         IBO = 0
C    NOW CHECK REPLICATION OF OUTPUT CODES IN A ROW
         IF (IVAL.EQ.IVLAST) REP = REP + 1
         IF ((IVAL.NE.IVLAST).OR.(I.EQ.NHDP)) THEN
               IF (REP.EQ.1) THEN
                   IWO = IWO + 1
                   CFRAM = OR1(IWO-1:IWO-1)
                   OR1(IWO:IWO) = CFRAM
                   CFRAM = OR2(IWO-1:IWO-1)
                   OR2(IWO:IWO) = CFRAM
C        CFT WARNS CHAR(I:I) = CHAR(I-1:I-1) IS AMBIGUOUS
C        CFRAM USED AS TEMPORARY STORE TO AVOID WARNING
               ELSE IF (REP.GT.1) THEN
                   IWO = IWO + 1
                   IVUP = REP/40
                   IVLOW = REP - IVUP*40
                   OR1(IWO:IWO) = C40(7+IVUP:7+IVUP)
                   OR2(IWO:IWO) = C40(1+IVLOW:1+IVLOW)
               ENDIF
               IF (IVAL.NE.IVLAST) THEN
               REP = 0
               IWO = IWO + 1
               IVLOW = AND(IVAL,I4LOW)
               IVUP = AND(SHIFTR(IVAL,4),I2LOW)
               OR1(IWO:IWO) = C1(1+IVUP:1+IVUP)
               OR2(IWO:IWO) = C2(1+IVLOW:1+IVLOW)
               IVLAST = IVAL
               ENDIF
         ENDIF
         IF (I.EQ.NHDP) THEN
               IF (IVAL.EQ.0) IWO = IWO - 1
               IF (REP.NE.0) IWO = IWO - 1
         ENDIF
         IVAL = 0
      ENDIF
      IBI = IBI - 1
      IF (IBI.LT.0) THEN
         IWI = IWI + 1
         IBI = BITS - 1
      ENDIF
 7000 CONTINUE
C    ADD E-O-L CODE
      IWO = IWO + 1
C   SECOND STRING LIMIT SHOULD BE OMITTED (INCLUDED DUE TO CFT 1.11 BUG)
      OR1(IWO:140) = '0'
      OR2(IWO:140) = 'A'
      IF ((IROW.EQ.NVDP).AND.(DUP.EQ.0)) OR2(IWO:140) = 'C'
      CALL DFX90B(OR1)
      CALL DFX90B(OR2)
 7008 IROW = IROW + 1
      IF (IROW.GT.NVDP) GO TO 7006
      DO 7007 I=1,NCOL
 7007 IF (IPOINT(I,IROW).NE.IPOINT(I,IROW-1)) GO TO 7006
      DUP = DUP + 1
      GO TO 7008
 7006 IF (DUP.GT.0) THEN
                   IVUP = DUP/40
                   IVLOW = DUP - IVUP*40
                   OR1 = ' '//C40(7+IVUP:7+IVUP)
                   OR2 = ' '//C40(1+IVLOW:1+IVLOW)
                   CALL DFX90B(OR1)
                   CALL DFX90B(OR2)
                   DUP = 0
                   IF (IROW.GT.NVDP) THEN
                          OR1 = ' 0'
                          OR2 = ' C'
                          CALL DFX90B(OR1)
                          CALL DFX90B(OR2)
                   ENDIF
      ENDIF
      IF (IROW.LE.NVDP) GO TO 7005
      FRAMES = FRAMES + 1
 7003 DO 7001 I=1,NCOL
      DO 7001 J=1,NROW
 7001 IPOINT(I,J) = 0
      WSDSE(NWS) = .TRUE.
      IF (CLOSE) THEN
          RECORD = ' PRINTRONIX ENDS'
          CALL DFX90B(RECORD)
          RECORD = ' '
          CALL DFX90B(RECORD)
          CALL DFX90C(IFAIL)
          GKSERR = IFAIL
          CFRAM = 'S'
          IF (FRAMES.EQ.1) CFRAM = ' '
          WRITE(ERRREC,10009) FRAMES,CFRAM
10009 FORMAT('**DIMFILM  -  DEVICE PRX300 TERMINATED - ',I6,' FRAME',A)
          CALL DFX003(ERRREC(1))
      ENDIF
      GO TO 9999
C    RESET DEVICE TRANSFORMATION - N.B. TREATING AS OUTPUT WS
 1004 DSCALE = AMAX1((CWSVP(2,NWS)-CWSVP(1,NWS))
     1                        /(CWSWIN(2,NWS)-CWSWIN(1,NWS)),
     2    (CWSVP(4,NWS)-CWSVP(3,NWS))/(CWSWIN(4,NWS)-CWSWIN(3,NWS)))
      XDCO = CWSVP(1,NWS) - CWSWIN(1,NWS)*DSCALE
      YDCO = CWSVP(3,NWS) - CWSWIN(3,NWS)*DSCALE
C    CLEAR SURFACE IF OPEN - ELSE RETURN
      IF (II.EQ.1) GO TO 7003
      GO TO 9999
      END
