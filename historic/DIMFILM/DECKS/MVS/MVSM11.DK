*DECK MVSM11 F
      SUBROUTINE DFXM11(NBET,NFONT,IERR,INO)
C                   DIMFILM FONT INTERFACE
C      READS FONT NFONT FROM DISC AND STORES AS ALPHABET NBET
C      WITHIN  COMMON /DFXC21/  (PARTITIONED TO CONTAIN UP TO
C      5 ALPHABETS). COORDINATES ARE STORED IN PACKED FORM
C       IE. 8 BITS PER COORDINATE : RANGE -128 TO 127
C      RELEVANT PARAMETERS ARE ALSO LOADED INTO COMMON /DFXC20/
C      IERR RETURNS ANY ERROR CODE ( = 0 IF OK)
C      INO RETURNS NUMBER OF COMPLETE CHARACTERS LOADED
C      ASSUMES DISC DATASET ALREADY ALLOCATED  (BY DFXMAE)
C      (CAN BE UNALLOCATED BY A SUBSEQUENT CALL TO DFXM12)
C      * THIS VERSION EXPECTS 5 INDEX PARAMETERS PER CHARACTER
C
C  ERROR CODES :
C                           * NON FATAL ERRORS *
C  IERR =  1   REQUESTED FONT (/MEMBER) NOT FOUND
C       =  2   FONT TRUNCATED (TOO MANY COORDINATES)
C       =  3   FONT HAS TOO MANY CHARACTERS FOR ALPHABET (TRUNCATED)
C       =  4   FONT HAS TOO FEW CHARACTERS FOR ALPHABET
C       =  5   FONT FILE LOAD ERROR / UNEXPECTED EOF
C                           * FATAL ERRORS *
C       = -1   SYSTEM ERROR - NO DATA TRANSFERRED
C       = -2   SYSTEM ERROR - PARTIAL DATA TRANSFER
C
*CALL,DFXC20
C
C    NOTE - /DFXC21/ IS MACHINE/IMPLEMENTATION DEPENDENT; SPECIFICATION
C                    SHOULD MATCH THAT IN DFXM20
C
      COMMON /DFXC21/ IABDAT(12000)
C
C          ICDATA MUST BE AT LEAST LREC WORDS LONG (60)
*CALL,DFXC22
C
C        DEFINE ALPHABET BOUNDARIES WITHIN /DFXC21/
C        EG ALLOW 3000 WORDS (12000 BYTES) FOR ALPHABET 1
C        IABST DEFINES STARTING LOCATIONS - MUST AGREE WITH DFXM20
      INTEGER IABST(6)
      DATA IABST/1,3001,6001,9001,11501,12001/
C            SET RECORD LENGTH (WORDS) - MUST AGREE WITH DATASET
      DATA LREC /60/
C
      NIPR = LREC/5
      IERR = 0
      INO = 0
C
C
C------------------------------------------------------
C
C      FONT FILE STRUCTURE
C
C      FILE HEADER:
C           WORD 1:   FONT NUMBER (+VE VALUE, -VE END OF DATA FILE)
C                     (FOR THE MVS IMPLEMENTATION THE FOLLOWING
C                      TWO POINTERS ARE RELATIVE; I.E. THEY ARE
C                      THE NUMBER OF INDEX+DATA RECORDS IN
C                      THE PRECEDING/CURRENT FONT.  A PARTITIONED
C                      DATA SET IS USED UNDER MVS SO NO ENDFLAG
C                      RECORD IS REQUIRED.)
C                2:   BACKWARD POINTER  (INDEX+DATA RECORDS USED FOR
C                                        PRECEDING FONT, -1 IF NONE)
C                3:   FORWARD POINTER    (INDEX+DATA RECORDS FOR THIS
C                                         FONT, REDUNDANT FOR
C                                         FONT=-1)
C                2:   BACKWARD POINTER  (RECORD NUMBER OF HEADER FOR
C                                        PRECEDING FONT, -1 IF NONE)
C                3:   FORWARD POINTER    (RECORD NUMBER FOR HEADER OF
C                                         NEXT FONT, REDUNDANT FOR
C                                         FONT=-1)
C                4:   NUMBER OF CHARACTERS IN FONT (INCLUDING ACCENTS)
C                                                   = <NUM>
C                5:   MONO HALF-WIDTH LEFT
C                6:   MONO HALF-WIDTH RIGHT
C                7:   BASE LINE OFFSET
C                8:   HEIGHT
C                9:   LINE SPACING
C                               (NOTE: 5-9 IN CHARACTER RASTER UNITS)
C      INDEX:
C            <NUM> 5 WORD ENTRIES, BEING FOR EACH CHARACTER:
C           WORD 1:   LAST BYTE POINTER (I.E. FIRST BYTE-1 OF NEXT
C                                        CHARACTER)
C                2:   LEFT EXTENT (PROPORTIONAL)
C                3:   RIGHT EXTENT (PROPORTIONAL)
C                4:   LOWEST EXTENT (HEIGHT MIN)
C                5:   HIGHEST EXTENT (HEIGHT MAX)
C                     (FOR ACCENTS 4/5 ARE MIN/MAX HEIGHTS:
C                      WHEN ABSOLUTE VALUE LESS THAN 100 ARE
C                      ABSOLUTE MIN/MAX,
C                      WHEN ABSOLUTE VALUE IS 100 OR GREATER ARE
C                      MIN/MAX HEIGHTS RELATIVE TO PRECEDING
C                      CHARACTER,
C                      BOTH ZERO IF ACCENT DOES NOT AFFECT HEIGHT
C                      OF PRECEDING CHARACTER)
C
C      DATA:
C            CHARACTER DATA - DESCRIBED IN DFX202
C
C------------------------------------------------------                 COSM1128
C
C
C              FIND FONT AND GET HEADER RECORD
      CALL DFXMAB(NFONT,ICDATA,IERROR)
      IF(IERROR.NE.0) GO TO 900
C
C
C ARRAY ICDATA NOW CONTAINS THE FOLLOWING INTEGERS:
C           NFONT,BACKPTR,FWDPTR,NCHAR,LEXT,REXT,OFFB,HT,LSRU
C ICDATA  :   1      2      3      4    5    6    7   8   9
C
      NFR          = ICDATA(3)
      NCHAR        = ICDATA(4)
      MHWLRU(NBET) = ICDATA(5)
      MHWRRU(NBET) = ICDATA(6)
      BLORU(NBET)  = ICDATA(7)
      HRU(NBET)    = ICDATA(8)
      LSRU(NBET)   = ICDATA(9)
      NIR = (NCHAR+NIPR-1)/NIPR
      NCR = NFR - NIR
C                ( NFR  = NUMBER OF RECORDS IN FONT (EXC HEADER))
C                ( NIR  = NUMBER OF INDEX RECORDS)
C                ( NCR  = NUMBER OF COORDINATE RECORDS)
C                ( NIPR = NUMBER OF INDEXES PER RECORD)
C
      IWLIM = IABST(NBET+1) - IABST(NBET)
      NCRA  = IWLIM/LREC
      IBLIM = IWLIM*4
C
      GO TO(10,10,10,40,50),NBET
C
C          LOAD INDEXES FOR ALPHABETS 1/2/3 AND SYMBOLS
   10 MAXCHR =120
      GO TO 1
   40 MAXCHR = 96
C
    1 NMAX = MIN0(MAXCHR,NCHAR)
      IF(NCHAR.GT.MAXCHR) IERR = 3
      IF(NCHAR.LT.MAXCHR) IERR = 4
      K=0
      LBYTEQ(0,NBET) = 0
C         GET INDEX RECORDS ONE AT A TIME
   12 CALL DFXMAC(1,ICDATA(1),IERROR)
      IF(IERROR.NE.0) GO TO 910
C
      DO 13 I=1,LREC,5
      K = K+1
      IF(ICDATA(I).GT.IBLIM) GO TO 11
      LBYTEQ(K,NBET) = ICDATA(I)
      LXTENT(K,NBET) = ICDATA(I+1)
      RXTENT(K,NBET) = ICDATA(I+2)
      LYTENT(K,NBET) = ICDATA(I+3)
      UYTENT(K,NBET) = ICDATA(I+4)
   13 CONTINUE
      IF(K.LT.NMAX) GO TO 12
      MXLBYT = LBYTEQ(K,NBET)
      KS = NMAX+1
      IF(NCHAR.GT.NMAX) GO TO 111
      GO TO 17
C          TOO MANY COORDS
   11 IERR = 2
      KS = K
      MXLBYT = LBYTEQ(K-1,NBET)
C          SKIP REST OF INDEX
  111 NSK = NIR - (K+NIPR-1)/NIPR
      IF(NSK.LT.1) GO TO 17
      DO 14 I=1,NSK
      CALL DFXMAC(1,ICDATA(1),IERROR)
   14 IF(IERROR.NE.0) GO TO 910
C                 SET REST TO ZERO
   17 IF(KS.GT.MAXCHR) GO TO 90
      DO 19 I=KS,MAXCHR
   19 LBYTEQ(I,NBET) = 0
      GO TO 90
C
C
C        LOAD INDEXES FOR MARKER SYMBOLS - ALPHABET 5
   50 NMAX = MIN0(48,NCHAR)
      IF(NCHAR.GT.48) IERR = 3
      IF(NCHAR.LT.48) IERR = 4
      K=0
      LBYTEM(0) = 0
C         GET INDEX RECORDS ONE AT A TIME
   52 CALL DFXMAC(1,ICDATA(1),IERROR)
      IF(IERROR.NE.0) GO TO 910
      DO 53 I=1,LREC,5
      K = K+1
      IF(ICDATA(I).GT.IBLIM) GO TO 51
   53 LBYTEM(K)   = ICDATA(I)
      IF(K.LT.NMAX) GO TO 52
      MXLBYT = LBYTEM(K)
      KS = NMAX+1
      IF(NCHAR.GT.NMAX) GO TO 511
      GO TO 57
C          TOO MANY COORDS
   51 IERR = 2
      KS = K
      MXLBYT = LBYTEM(K-1)
C          SKIP REST OF INDEX
  511 NSK = NIR - (K+NIPR-1)/NIPR
      IF(NSK.LT.1) GO TO 57
      DO 54 I=1,NSK
      CALL DFXMAC(1,ICDATA(1),IERROR)
   54 IF(IERROR.NE.0) GO TO 910
C
   57 IF(KS.GT.48) GO TO 90
      DO 59 I=KS,48
   59 LBYTEM(I) = 0
C
C
C         READ FONT COORDINATES INTO APPROPRIATE LOCATION
   90 NABST = IABST(NBET)
      INO = KS-1
      NCRL = MIN0(NCR,NCRA)
      CALL DFXMAC(NCRL,IABDAT(NABST),IERROR)
      IF(IERROR.NE.0) GO TO 920
C             HAVE ALL BYTES BEEN TRANSFERRED
      NBTRNS = NCRL*LREC*4
      NBLEFT = MXLBYT-NBTRNS
      IF(NBLEFT.LE.0) GO TO 96
C         PROCESS PARTLY FULL LAST RECORD
      CALL DFXMAC(1,ICDATA(1),IERROR)
      IF(IERROR.NE.0) GO TO 924
      NWLEFT = (NBLEFT+3)/4
      NABSTP = NABST + NCRL*LREC - 1
      DO 94 I=1,NWLEFT
   94 IABDAT(I+NABSTP) = ICDATA(I)
C
C              CLOSE FILE
   96 CALL DFXMAD
      RETURN
C
C                   ******  ERROR TRAPPING  ******
C              OPEN ERROR
  900 IF(IERROR.EQ.1) GO TO 902
      CALL DFXMSA(IERROR)
      IERR = -1
      GO TO 999
C              IERROR = 1  - MEMBER NOT FOUND
  902 IERR = IERROR
      GO TO 999
C
C              ERROR WHILE READING INDEX
  910 IERR = -1
      GO TO 999
C
C              ERROR WHILE READING DATA
  920 NBPROC = (NCRL-IERROR) * LREC*4
      GO TO 926
  924 NBPROC = (NCRL+IERROR) * LREC*4
C
  926 IERR = 5
C                WORK OUT HOW MANY CHARACTERS TRANSFERRED
C              (IERROR = NUMBER OF RECORDS NOT TRANSFERRED)
      IF(NBET.EQ.5) GO TO 1050
C
      DO 1012 I=1,INO
      II = I
      IF(LBYTEQ(I,NBET).GT.NBPROC) GO TO 1014
 1012 CONTINUE
      GO TO 999
 1014 DO 1016 I=II,MAXCHR
 1016 LBYTEQ(I,NBET) = 0
      GO TO 1090
C
 1050 DO 1052 I=1,INO
      II = I
      IF(LBYTEM(I).GT.NBPROC) GO TO 1054
 1052 CONTINUE
      GO TO 999
 1054 DO 1056 I=II,48
 1056 LBYTEM(I) = 0
C
 1090 INO = II-1
C
  999 RETURN
C
      END
