*DECK DFX01G F
      SUBROUTINE DFX01G(DEV,DIAG,IERR)
C
C    DICOMED DEVICE SPECIFIC CONTROL
C    PRIMES CRT FOR SPECIFIED DEVICE (IF ACTIVE)
C    IF DEVICE DISPLAY IS NON-EMPTY A FRAME ADVANCE WILL
C    PRECEDE PRIME, WHICH WILL ALWAYS BE FOLLOWED BY ADVANCE
C    DIAGNOSTICS WILL BE ISSUED UNLESS DIAG = .FALSE.
C    IERR WILL RETURN -   0  PERFORMED
C                        -1  DEVICE OPEN, BUT NOT ACTIVE
C                        -2  DEVICE NOT OPEN
C
      LOGICAL DIAG
      CHARACTER*(*) DEV
      CHARACTER*6 CERR
*CALL,DFXC00
*CALL,DFXC05
*CALL,DFXCD0
*CALL,DFXPAB
*CALL,DFXCAD
*CALL,DFXCBD
C    CHECK STATUS OF DEVICE
      CALL DFX008(DEV,IWSNO)
C    IWSNO WILL BE DEVICE NUMBER OF OPEN DEVICE
      IERR = -2
      IF (IWSNO.LE.0) GO TO 10
      IERR = -1
      IF (.NOT.WSAC(IWSNO)) GO TO 10
      IERR = 0
C    HAVE OPEN AND ACTIVE DEVICE
C
C    SET DEVICE FOR DFX000
      NWS = IWSNO
      IF (WSDSE(NWS)) GO TO 1
C    CLEAR DISPLAY SURFACE FOR NON-EMPTY DEVICE
      CALL DFX000(-3,ZDUMMY,ZDUMMY,ZDUMMY,NDUMMY)
C    NOW DO PRIME + FRAME ADVANCE
    1 CALL DFX000(-2006,ZDUMMY,ZDUMMY,ZDUMMY,NDUMMY)
   99 RETURN
   10 IF (DIAG) THEN
          CERR = 'ACTIVE'
          IF (IERR.EQ.-2) CERR = 'OPEN'
          IF (ICHECK.GT.0) WRITE(ERRREC,11) ROUTIN,DEV,CERR
*CALL,LINOUT0
   11 FORMAT(1H0,'**DIMFILM WARNING** ',A,' REFERENCED WHEN DEVICE ',
     1   A,' WAS NOT ',A,'; CALL IGNORED')
      ENDIF
      GO TO 99
      END
