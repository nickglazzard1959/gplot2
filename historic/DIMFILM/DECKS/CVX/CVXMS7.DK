*DECK CVXMS7 F
C
C       REPORT ON WHETHER BATCH/INTERACTIVE
C       IF NON-ZERO FOR INTERACTIVE, ZERO FOR BATCH
C       UNDER CONVEX:
C       IF GETLOG IS NON-BLANK THEN INTERACTIVE
C          (ENVIRONMRENT VARIABLE 'ENVIRONMENT'
C           IS NON BLANK FOR BATCH JOB (NOTIONALLY SET TO BATCH),
C           BUT IS NOT RELIABLE - USER MAY ACCESS ENVIRONMENT
C           AND MAY BE FALSE FOR CRON, ETC.)
C
      IMPLICIT INTEGER (A-Z)
      INTEGER*4 I4BYTE(4)
      REAL      R(2)
      EQUIVALENCE (R,I4BYTE)
      CHARACTER*20 EVALUE
      LOGICAL FIRST
*CALL,CVXCVX
*CALL,DFXPAB
      IA = 1
      CALL GETLOG(EVALUE)
      IF (EVALUE.EQ.' ') IA = 0
C    NOW PERFORM OTHER CONVEX SYSTEM SPECIFIC FUNCTIONS
C
C    TEST IF DEFAULT REAL IS *4 OR *8,
C    AND IF DEFAULT INTEGER IS SAME OR DIFFERENT!
C    THIS INFORMATION IS PASSED TO CVX(DFX)M31/32/33
C    WHICH REQUIRE TO ADDRESS AN INTEGER MAPPED TO
C    LOW END OF REAL VALUE
C
C    THE TEST EQUIVALENCES INTEGER*4 ARRAY AGAINST A DEFAULT REAL
C    ZEROES THE INTEGERS THEN SETS THE REAL AND LOOKS TO SEE
C    WHICH INTEGER ARRAY ELEMENT IS CHANGED!
C
C   REAL*4      |---1---|---2---|---3---|---4---|
C   REAL*8      |-------1-------|-------2-------|
C   INTEGER*4   |---1---|---2---|---3---|---4---|
C
      I4BYTE(1) = 0
      I4BYTE(2) = 0
      I4BYTE(3) = 0
      I4BYTE(4) = 0
      R(2) = 12345.6789
      BYTLOW = 2
      IF (I4BYTE(2).NE.0) BYTLOW = 1
C    IN THIS LAST CASE I4BYTE(3) WOULD BE NON-ZERO
C    BYTLOW IS PASSED TO DFXM31/32 AND TO DFXM33 VIA /DFXCVX/
C
C
C    NOW GO INITIALISE LOGICAL UNIT BASE NUMBER
C    DEFAULT IS 200, ELSE USE VALUE FROM ENVIRONMENT
C    VARIABLE DIMFILM_BASEUNIT
      LFBASE = 200
      CALL GETENV('DIMFILM_BASEUNIT',EVALUE)
      IF (EVALUE.NE.' ') THEN
C    GET INETEGER VALUE - ERROR JUST USE DEFAULT, NO REPORT
          K = 0
          FIRST = .TRUE.
          DO 1 I=1,20
          IF (FIRST.AND.(EVALUE(I:I).EQ.' ')) GO TO 1
          FIRST = .FALSE.
          IF (EVALUE(I:I).EQ.' ') GO TO 2
          KDIG = ICHAR(EVALUE(I:I))
          IF ((KDIG.LT.48).OR.(KDIG.GT.57 )) GO TO 3
          K = K*10 + (KDIG - 48)
1         CONTINUE
2         IF ((K.GT.0).AND.(K.LT.250)) LFBASE = K
      ENDIF
3     LFNEXT = LFBASE + 1 + MSOPWS
      RETURN
      END
