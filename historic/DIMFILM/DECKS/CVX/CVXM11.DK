*DECK CVXM11 F
      SUBROUTINE DFXM11(NBET,NFONT,IERR,INO)
C
C                   DIMFILM FONT INTERFACE
C
C   BASED UPON UNICOS VERSION   -  JOHN GILBERT  SEPTEMBER 1991
C
C      READS FONT NFONT FROM DISC AND STORES AS ALPHABET NBET
C      WITHIN  COMMON /DFXC21/  (PARTITIONED TO CONTAIN UP TO
C      5 ALPHABETS). COORDINATES ARE STORED IN PACKED FORM
C       IE. 8 BITS PER COORDINATE : RANGE -128 TO 127
C      RELEVANT PARAMETERS ARE ALSO LOADED INTO COMMON /DFXC20/
C      IERR RETURNS ANY ERROR CODE ( = 0 IF OK)
C      INO RETURNS NUMBER OF COMPLETE CHARACTERS LOADED
C      * THIS VERSION EXPECTS 5 INDEX PARAMETERS PER CHARACTER
C
C
C
C        ROUTINE LOADS FONT NUMBER NFONT INTO ALPHABET NBET
C        (OPENS AND CLOSES FILE ON EACH FONT LOAD - VIA MAA)
C
C        ALSO CONTAINS TWO OTHER ENTRY POINTS:
C
C        DFXM10   -  ACCESS DEFAULT FONT DATASET
C
C           CALLS ASSEMBLER ROUTINE DFXMAB/D (in MAA)
C           TO PERFORM OPEN/CLOSE TO CHECK FILE EXISTENCE
C
C        DFXM12   -  RELEASE FONT DATASET (DUMMY IN CONVEX)
C
C        THESE ARE INCLUDED AS ENTRY POINTS SO THAT THE FONT DN
C        NEED ONLY BE DEFINED ONCE - THE DEFAULT PDN AND ID ARE
C        SET UP IN THE CAL ROUTINE DFXMAC.
C
C------------------------------------------------------------------
C
C        COMMON BLOCK DFXC21 IS USED TO STORE THE PACKED DATA
C        BYTE LIMITS ARE ASSIGNED FOR EACH FONT TYPE AND
C        PARAMETER STATEMENTS USED TO CALCULATE WORD ADDRESSES
C        FOR THE FIRST WORD OF EACH FONT AND THE TOTAL LENGTH
C        NEEDED FOR ADATA. THE THREE PARAMETERS WHICH MUST BE
C        SET ARE
C
C        NBA  BYTE LIMIT FOR ALPHABETIC FONTS - CURRENTLY 12000
C        NBS  BYTE LIMIT FOR MARKER FONTS     - CURRENTLY 10000
C        NBM  BYTE LIMIT FOR MARKER FONTS     - CURRENTLY  2000
C
C        N.B. IF CHANGED THESE VALUES WILL ALSO NEED TO BE
C             ALTERED IN CAL ROUTINE DFXM20.
C
C        FROM THESE THE FOLLOWING ARE CALCULATED:
C
C        NWA  # OF WORDS PER ALPHABETIC FONT
C        NWS  # OF WORDS PER SPECIAL FONTS
C        NWM  # OF WORDS PER MARKER FONT
C        PBET1 .. PBET5  POINTERS TO FIRST WORD OF EACH ALPHABET
C        NWDATA   # OF WORDS FOR ALL FIVE ALPHABETS
C
C----------------------------------------------------------------
C
C        OTHER PARAMETERS USED:
C
C        NWPR  :  NUMBER OF WORDS PER RECORD FOR FONT DATASET
C        NBPR  :  NUMBER OF BYTES PER RECORD FOR FONT DATASET
C        NIEPR :  NUMBER OF INDEX ENTRIES PER RECORD FOR FONT DATASET
C
C----------------------------------------------------------------
C
C        ERROR CODES : RETURNED IN IERR
C                      FOR DFXM11 INO RETURNS NUMBER OF CHARACTERS
C                      SUCCESSFULLY READ
C
C        DFXM10  -   IERR SET TO SYSTEM CODE (0=SUCCESS)
C        DFXM12  -   IERR SET TO SYSTEM CODE (0=SUCCESS)
C
C        DFXM11  -   NON-FATAL CODES
C
C         1   FONT NOT FOUND
C         2   FONT TRUNCATED (I.E. COORDINATES EXCEED MAX ALLOWED)
C         3   FONT HAS TOO MANY ENTRIES
C         4   FONT HAS TOO FEW ENTRIES
C         5   ERROR IN FONT LOAD. UNEXPECTED END OF FILE WHILE
C             READING IN FONT
C
C                    FATAL CODES
C
C        -1   SYSTEM ERROR - NO DATA TRANSFERRED
C        -2   SYSTEM ERROR - PARTIAL TRANSFER OF DATA
C
C----------------------------------------------------------------
C
C       DIMFILM MACHINE DEPENDENT INTERFACE - CONVEX VERSION
C       VERSION 1.0        12/09/91        JOHN GILBERT,ULCC
C
      IMPLICIT INTEGER (A-Z)
      PARAMETER (NWPR=30 , NBPR=NWPR*4 , NIEPR=6)
      PARAMETER (NBA=12000 , NBS=10000 , NBM=2000)
      PARAMETER (NWA=NBA/4 , NWS=NBS/4 , NWM=NBM/4)
      PARAMETER (PBET2=1+NWA , PBET3=PBET2+NWA , PBET4=PBET3+NWA ,
     +           PBET5=PBET4+NWS)
      PARAMETER (NWDATA=PBET5+NWM-1)
      INTEGER*4  LINE(NWPR),ENDFLG
      INTEGER  PBET(5)
*CALL,DFXC20
      INTEGER*4 ADATA
      COMMON /DFXC21/ ADATA(NWDATA)
C    (FOR CONVEX NWDATA = 12000)
*CALL,DFXC22
      EQUIVALENCE     (ICDATA(1),LINE(1))
      DATA            ENDFLG/3HEND/
      DATA            PBET /1,PBET2,PBET3,PBET4,PBET5/
C
C------------------------------------------------------
C
C      FONT FILE STRUCTURE
C
C      FILE HEADER:
C           WORD 1:   FONT NUMBER (+VE VALUE, -VE END OF DATA FILE)
C                     (FOR CONVEX IMPLEMENTATION THE FOLLOWING
C                      TWO POINTERS ARE RELATIVE; I.E. THEY ARE
C                      THE NUMBER OF INDEX+DATA RECORDS IN
C                      THE PRECEDING/CURRENT FONT EXCLUDING THE
C                      INTER-FONT END FLAG RECORD WHICH IS USED
C                      FOR CONVEX)
C                2:   BACKWARD POINTER  (INDEX+DATA RECORDS USED FOR
C                                        PRECEDING FONT, -1 IF NONE)
C                3:   FORWARD POINTER    (INDEX+DATA RECORDS FOR THIS
C                                         FONT, REDUNDANT FOR
C                                         FONT=-1)
C                4:   NUMBER OF CHARACTERS IN FONT (INCLUDING ACCENTS)
C                                                   = <NUM>
C                5:   MONO HALF-WIDTH LEFT
C                6:   MONO HALF-WIDTH RIGHT
C                7:   BASE LINE OFFSET
C                8:   HEIGHT
C                9:   LINE SPACING
C                               (NOTE: 5-9 IN CHARACTER RASTER UNITS)
C      INDEX:
C            <NUM> 5 WORD ENTRIES, BEING FOR EACH CHARACTER:
C           WORD 1:   LAST BYTE POINTER (I.E. FIRST BYTE-1 OF NEXT
C                                        CHARACTER)
C                2:   LEFT EXTENT (PROPORTIONAL)
C                3:   RIGHT EXTENT (PROPORTIONAL)
C                4:   LOWEST EXTENT (HEIGHT MIN)
C                5:   HIGHEST EXTENT (HEIGHT MAX)
C                     (FOR ACCENTS 4/5 ARE MIN/MAX HEIGHTS:
C                      WHEN ABSOLUTE VALUE LESS THAN 100 ARE
C                      ABSOLUTE MIN/MAX,
C                      WHEN ABSOLUTE VALUE IS 100 OR GREATER ARE
C                      MIN/MAX HEIGHTS RELATIVE TO PRECEDING
C                      CHARACTER,
C                      BOTH ZERO IF ACCENT DOES NOT AFFECT HEIGHT
C                      OF PRECEDING CHARACTER)
C
C      DATA:
C            CHARACTER DATA - DESCRIBED IN DFX202
C
C------------------------------------------------------
C
C
C        SEARCH FOR FONT
C
      IERR=0
      CALL DFXMAB(IERR)
      IF (IERR.NE.0) GO TO 901
    1 CALL DFXMAC(LINE,NBPR,IERR)
      IF (IERR.EQ.12) GO TO 900
      IF (IERR.NE.0) GO TO 901
      IF (LINE(1).EQ.NFONT) GOTO 3
    2 CALL DFXMAC(LINE,NBPR,IERR)
      IF (IERR.EQ.12) GO TO 900
      IF (IERR.NE.0) GO TO 901
        IF (LINE(1).EQ.ENDFLG) GOTO 1
        GOTO 2
  900 IERR=1
      INO=0
      GO TO 1000
C------------------------------------------------------
C
C      LOAD DATA FROM HEADER RECORD
C
C
C ARRAY ICDATA NOW CONTAINS THE FOLLOWING INTEGERS:
C           NFONT,BACKPTR,FWDPTR,NCHAR,LEXT,REXT,OFFB,HT,LSRU
C ICDATA  :   1      2      3      4    5    6    7   8   9
C
C     NFR          = ICDATA(3)
C     NCHAR        = ICDATA(4)
C     MHWLRU(NBET) = ICDATA(5)
C     MHWRRU(NBET) = ICDATA(6)
C     BLORU(NBET)  = ICDATA(7)
C     HRU(NBET)    = ICDATA(8)
C     LSRU(NBET)   = ICDATA(9)
C     NIR = (NCHAR+NIPR-1)/NIPR
C     NCR = NFR - NIR
C                ( NFR  = NUMBER OF RECORDS IN FONT (EXC HEADER))
C                ( NIR  = NUMBER OF INDEX RECORDS)
C                ( NCR  = NUMBER OF COORDINATE RECORDS)
C                ( NIPR = NUMBER OF INDEXES PER RECORD)
C
    3 MHWLRU(NBET)=LINE(5)
      MHWRRU(NBET)=LINE(6)
      BLORU (NBET)=LINE(7)
      HRU   (NBET)=LINE(8)
      LSRU  (NBET)=LINE(9)
C------------------------------------------------------
C
C      FILL ARRAYS FROM INDEX RECORDS
C      THE ACTIONS TAKEN VARY FOR EACH OF THE THREE FONT
C      TYPES DETERMINED BY NBET:
C
C       ALPHABET FONTS         NBET=1-3
C       SPECIAL FONTS          NBET=4
C       MARKER FONTS           NBET=5
C
C------------------------------------------------------
C
C      FIRST SET UP CERTAIN VARIABLES DEPENDING ON FONT TYPE
C
C   MAXCH   :  MAX NO OF CHARACTERS IN CURRENT FONT TYPE
C
C   LBYTE   :  CURRENT ARRAY OF LAST BYTE POINTERS
C       NOTE:  POINTER IS USED TO EQUIVALENCE THE DUMMY ARRAY
C              LBYTE WITH THE CURRENT ARRAY OF LAST BYTE POINTERS
C
C   FLEN    :  MAX LENGTH OF CURRENT FONT IN BYTES
C
      IF (NBET.EQ.4) THEN
        MAXCH=96
        FLEN=NBS
      ELSE IF (NBET.EQ.5) THEN
        MAXCH=48
        FLEN=NBM
      ELSE
        MAXCH=120
        FLEN=NBA
      ENDIF
C
C   THEN FILL RELEVANT ARRAYS FROM INDEX
C
      NMAXI=MIN(MAXCH,LINE(4))
      IF (NMAXI.LT.MAXCH) IERR=4
      IF (LINE(4).GT.MAXCH) IERR=3
      DO 500 I=0,MAXCH
      IF (NBET.EQ.4) THEN
         LBYTES(I) = 0
      ELSE IF (NBET.EQ.5) THEN
         LBYTEM(I) = 0
      ELSE
         LBYTEA(I,NBET) = 0
      ENDIF
  500 CONTINUE
      NIND=(NMAXI-1)/NIEPR+1
      XIND=(LINE(4)-1)/NIEPR+1-NIND
      DO 501 I=1,NIND
      CALL DFXMAC(LINE,NBPR,IERR)
      IF (IERR.EQ.12) GO TO 902
      IF (IERR.NE.0) GO TO 901
      IF (LINE(1).EQ.ENDFLG) GOTO 902
      DO 501 J=1,NIEPR
        I1=NIEPR*(I-1)+J
        IF (NBET.EQ.4) THEN
           LBYTES(I1)=LINE(J*5-4)
        ELSE IF (NBET.EQ.5) THEN
           LBYTEM(I1)=LINE(J*5-4)
        ELSE
           LBYTEA(I1,NBET)=LINE(J*5-4)
        ENDIF
        IF (NBET.NE.5) THEN
          LXTENT(I1,NBET)=LINE(J*5-3)
          RXTENT(I1,NBET)=LINE(J*5-2)
          LYTENT(I1,NBET)=LINE(J*5-1)
          UYTENT(I1,NBET)=LINE(J*5)
        ENDIF
  501 CONTINUE
      IF (XIND.NE.0) THEN
        DO 502 I=1,XIND
      CALL DFXMAC(LINE,NBPR,IERR)
      IF (IERR.EQ.12) GO TO 902
      IF (IERR.NE.0) GO TO 901
  502   IF (LINE(1).EQ.ENDFLG) GOTO 902
      ENDIF
C---------------------------------------------------------------
C
C   FILL DATA ARRAY
C
C     BEFORE READING DATA THE LAST BYTE POINTERS ARE SEARCHED
C     FOR THE LAST CHARACTER WHICH WILL FIT INTO THE CURRENT
C     ALPHABET - CHARACTERS WHICH DONT FIT HAVE THEIR LAST
C     BYTE POINTERS SET TO ZERO.
C
C   LCHAR   :  LAST CHAR IN FONT WHICH WILL FIT INTO
C              CURRENT ALPHABET
C   NFREC   :  NUMBER OF FULL RECORDS OF COORDS TO BE
C              READ FROM FONT DATASET
C   XWORD   :  EXTRA WORDS FROM LAST PARTIAL FONT RECORD
C
      DO 800 I=NMAXI,1,-1
      IF (NBET.EQ.4) THEN
         LBYTE = LBYTES(I)
      ELSE IF (NBET.EQ.5) THEN
         LBYTE = LBYTEM(I)
      ELSE
         LBYTE = LBYTEA(I,NBET)
      ENDIF
  800 IF(LBYTE.LT.FLEN) GOTO 801
      IERR=2
      INO=0
      GO TO 1000
  801 LCHAR=I
      IF (LCHAR.NE.NMAXI) IERR=2
      DO 802 I=LCHAR+1,NMAXI
      IF (NBET.EQ.4) THEN
         LBYTES(I) = 0
      ELSE IF (NBET.EQ.5) THEN
         LBYTEM(I) = 0
      ELSE
         LBYTEA(I,NBET) = 0
      ENDIF
  802 CONTINUE
      IF (NBET.EQ.4) THEN
         LBYTE = LBYTES(LCHAR)
      ELSE IF (NBET.EQ.5) THEN
         LBYTE = LBYTEM(LCHAR)
      ELSE
         LBYTE = LBYTEA(LCHAR,NBET)
      ENDIF
      NFREC=LBYTE/NBPR
      N=PBET(NBET)
      DO 803 NREC=1,NFREC
      CALL DFXMAC(ADATA(N),NBPR,IERR)
      IF (IERR.EQ.12) GO TO 903
      IF (IERR.NE.0) GO TO 904
      IF (ADATA(N).EQ.ENDFLG) GOTO 903
  803 N=N+NWPR
      XBYTE=LBYTE-NFREC*NBPR
      IF (XBYTE.NE.0) THEN
      CALL DFXMAC(ADATA(N),XBYTE,IERR)
      IF (IERR.EQ.12) GO TO 903
C    CLEAR DATA EXCEEDS LENGTH OF BUFFER
C    (FOR XBYTE LESS THAN FULL RECORD)
      IF (IERR.EQ.8) IERR = 0
      IF (IERR.NE.0) GO TO 904
        IF (ADATA(N).EQ.ENDFLG) GOTO 903
      ENDIF
      INO=LCHAR
C   MUST CLOSE FILE FOR CONVEX - SO WILL BE RE-OPENED NEXT TIME
1000  CALL DFXMAD(IERR0)
      RETURN
C----------------------------------------------------------------
C       ERROR TRAPPING
C
  901 IERR=-1
      INO=0
      GO TO 1000
  902 IERR=5
      INO=0
      GO TO 1000
  903 IERR=5
      GOTO 910
  904 IERR=-2
      GOTO 910
C
C      CALCULATE NUMBER OF CHARS FOR WHICH DATA SUCCESSFULLY READ
C
  910 LBR=(NREC-1)*NBPR
      DO 911 I=LCHAR,0,-1
      IF (NBET.EQ.4) THEN
         LBYTE = LBYTES(I)
      ELSE IF (NBET.EQ.5) THEN
         LBYTE = LBYTEM(I)
      ELSE
         LBYTE = LBYTEA(I,NBET)
      ENDIF
  911 IF(LBYTE.LT.LBR) GOTO 912
  912 INO=I
      GO TO 1000
C================================================================
C
      ENTRY DFXM10(IERR)
C
C   ACCESS - CHECK BY OPEN/CLOSE
C
      CALL DFXMAB(IERR)
      IF (IERR.EQ.0) THEN
            CALL DFXMAD(IERR)
C    IERR = ?  --->  CLOSE WITH NEITHER READ NOR WRITE
C    SO CLEAR ERROR  (PROBABLY REDUNDANT ON CONVEX)
C           IF (IERR.EQ.?) IERR = 0
      ENDIF
        RETURN
C================================================================
C
      ENTRY DFXM12(IERR)
C  NULL UNDER CONVEX
      IERR = 0
      RETURN
      END
