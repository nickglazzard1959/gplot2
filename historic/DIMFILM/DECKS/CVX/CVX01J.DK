*DECK CVX01J F
      SUBROUTINE DFX01J
C    THIS IS SET OF ROUTINES FOR HANDLING USE TAPE FACILITIES FOR
C    DIMFILM UNDER CONVEXOS
C          **NOTE** FILE SUPPORT ONLY AT PRESENT
C               TAPE SUPPORT NOT AVAILABLE
C                          -  JOHN GILBERT  SEPTEMBER 1991
C
C
C    THREE ENTRIES DFX01K/L/M CORRESPOND TO DFXNNA/B/C, WHILE THE
C    MAIN ENTRY DFX01J CORRESPONDS TO DFXNND, FOR RELEVANT DEVICES
C            - SEE DFXUT1 FOR INTERPRETATION OF VSN/UTFLAG
C
C
C
C
C
C    AT PRESENT UNDER CMS INTERNAL FILES ASSIGNED TO FORTRAN
C    LOGICAL UNIT NUMBERS ARE UTILISED.  IDEALLY THESE SHOULD
C    NOT BE RELATED TO UNIT NUMBERS BUT WOULD HAVE CONSTRUCTED
C    FILE NAMES (AS PER COS/UNICOS IMPLEMENTATIONS).
C    AT PRESENT THE BASE UNIT NUMBER IS AS SUPPLIED TO
C    USETPE (NOTE TAPE VSNS ARE NOT YET SUPPORTED) AND
C    FURTHER SCRATCH FILES ARE INCREMENTED FROM THIS VALUE.
C
      PARAMETER (NCW=14)
*CALL,DFXPAB
*CALL,DFXCBA
*CALL,DFXCBD
*CALL,CVXCUT
*CALL,CVXCVX
      INTEGER*2 RBUFF(*)
      INTEGER*2 CBUFF(NCW)
      INTEGER UBC,DTYPE,BUFFPT,WAIT
      INTEGER FLAG1,RCOUNT,BYTES(MSOPWS),FRAME(MSOPWS)
      INTEGER DN,ERR
      INTEGER*4 ODN(LFTYPE,5),RDN(LFTYPE,5),GDN(LFTYPE,5),BDN(LFTYPE,5)
C    ALLOW ENOUGH SPACE FOR C FILE TYPE FOR EACH
      EQUIVALENCE (RCOUNT,CBUFF(13))
      CHARACTER*(*) SHBLK1,SHBLK2
      CHARACTER*1  F(5)
      CHARACTER*100 RNAME(5),GNAME(5),BNAME(5)
      CHARACTER*50 TMPDIR
      INTEGER TEMP
      LOGICAL FTCHAN(MSOPWS),DFRAME(MSOPWS),SBLOCK(MSOPWS)
      DATA    FTCHAN/MSOPWS*.FALSE./,DFRAME/MSOPWS*.FALSE./
      DATA F/'1','2','3','4','5'/
      DATA TMPDIR/' '/
      ENTRY DFX01K(DN,SHBLK1,SHBLK2,IERR)
C    UNTIL TAPES ARE SUPPORTED DN IS SIMPLY THE UNIT NUMBER
C    SOME MECHANISM TO PASS AND USE VSN + SCRATCH FILES
C    WILL NEED IMPLEMENTING
      IERR=0
      FTCHAN(NWS) = .FALSE.
      DFRAME(NWS) = .FALSE.
      SBLOCK(NWS) = .TRUE.
C   SOME OF TAPE TESTS INCLUDED - ALTHOUGH IRRELEVANT ON CONVEX
      IF ((UTFLAG(NWS).EQ.13).OR.(UTFLAG(NWS).EQ.3).OR.
     1    (UTFLAG(NWS).EQ.4)) SBLOCK(NWS) = .FALSE.
      FRAME(NWS) = 0
      BYTES(NWS) = 0
      IF (UTFLAG(NWS).GT.10) THEN
C    MUST BE HERE IF NO TAPE SUPPORT
        FTCHAN(NWS)=.TRUE.
        READ(UTVSN(NWS)(4:5),'(I2)') ODN(1,NWS)
      ELSE
        ODN(1,NWS)=DN
      ENDIF
C    *NO TAPES ON CONVEX YET*
C     USE ODN/DN AS UNIT NUMBER AND INCREMENT FOR R/G/B
C     DN=DN.AND.MASK1
C     RDN(1,NWS)=DN.OR.RMASK
C     GDN(1,NWS)=DN.OR.GMASK
C     BDN(1,NWS)=DN.OR.BMASK
      RDN(1,NWS)=DN + 1
      GDN(1,NWS)=DN + 2
      BDN(1,NWS)=DN + 3
      IF (TMPDIR.EQ.' ') CALL GETENV('$TEMP',TMPDIR)
      TMPLEN = INDEX(TMPDIR,' ') - 1
      RNAME(NWS) = TMPDIR(1:TMPLEN)//'/dfxrscratch'//F(NWS)
      GNAME(NWS) = TMPDIR(1:TMPLEN)//'/dfxgscratch'//F(NWS)
      BNAME(NWS) = TMPDIR(1:TMPLEN)//'/dfxbscratch'//F(NWS)
C
C    OPEN ALL SCRATCH FILES
C
      CALL DFX01T(RDN(1,NWS),RNAME(NWS),ERR)
      CALL DFX01T(GDN(1,NWS),GNAME(NWS),ERR)
      CALL DFX01T(BDN(1,NWS),BNAME(NWS),ERR)
C
C    ***NOTE***
C    FORTRAN WRITES ARE USED TO ODN AS USETAPE DOES NOT YET
C    SUPPORT TAPES - WHEN IT DOES IT MAY BE SENSIBLE TO
C    RESERVE FORTRAN WRITES FOR FTCHAN AND USE A SCRATCH FILE
C    FOR ODN = THEN SPOOL TO TAPE
C
C... WRITE SHORT BLOCKS TO DATA SET (UNLESS ?FT)
C
      IF (SBLOCK(NWS)) THEN
              WRITE(ODN(1,NWS)) (SHBLK1(1:20))
C
              WRITE(ODN(1,NWS)) (SHBLK2(1:130))
              BYTES(NWS)=150
      ENDIF
      RETURN
C-------------------------------------------------------------------
      ENTRY DFX01L(RBUFF,BUFFPT,DTYPE)
      GOTO (10,11,12,99,14), DTYPE+1
   99 IERR=-1
      RETURN
C... RED DATA RECORDS
   11 WRITE(ODN(1,NWS)) (RBUFF(I),I=1,BUFFPT)
      BYTES(NWS) = BYTES(NWS) + 2*BUFFPT
      IF (DFRAME(NWS)) CALL DFX01X(RDN(1,NWS),RBUFF,BUFFPT,ERR)
      RETURN
C... GREEN DATA RECORDS
   12 CALL DFX01X(GDN(1,NWS),RBUFF,BUFFPT,ERR)
      RETURN
C... BLUE DATA RECORDS
   14 CALL DFX01X(BDN(1,NWS),RBUFF,BUFFPT,ERR)
      RETURN
C
C... CONTROL BLOCK
C
C... SAVE INFORMATION TO FREE RBUFF FOR COPYING OPERATIONS
C
   10 DO 100 I=1,NCW
  100 CBUFF(I)=RBUFF(I)
C... READ CONTROL BLOCK FLAGS
      TEMP = CBUFF(12)
      FLAG1 = ISHFT(TEMP,-8)
      IF (FLAG1.EQ.8) THEN
C    IF FRAME ADVANCE INCREMENT LOCAL FRAME COUNT
C    (DONE HERE AS RCOUNT WILL DECREMENT - DEPENDS ON RCOUNT
C     BEING CORRECTLY SET IN EACH CONTROL BLOCK)
         FRAME(NWS) = FRAME(NWS) + 1 + RCOUNT
      ENDIF
      IF (FLAG1.EQ.16) GOTO 200
C... START/END DOUBLE FRAMING
      IF      (FLAG1.EQ.1) THEN
        DFRAME(NWS)=.TRUE.
        GOTO 200
      ELSE IF (FLAG1.EQ.2) THEN
        DFRAME(NWS)=.FALSE.
        GOTO 200
      ENDIF
C... COPY RED RECORDS IF DOUBLE FRAMING
      IF (.NOT.DFRAME(NWS)) GOTO 140
  130 CALL DFX01O(RDN(1,NWS),ODN(1,NWS),BYTES(NWS))
      RCOUNT=RCOUNT-1
C... COPY GREEN AND BLUE RECORDS
  140 CALL DFX01O(GDN(1,NWS),ODN(1,NWS),BYTES(NWS))
      CALL DFX01O(BDN(1,NWS),ODN(1,NWS),BYTES(NWS))
C... CONTROL BLOCK IS NOT COPIED TO TAPE
  150 CONTINUE
      IF (DFRAME(NWS).AND.RCOUNT.GT.0) GOTO 130
      CALL DFX01U(RDN(1,NWS),ERR)
      CALL DFX01U(GDN(1,NWS),ERR)
      CALL DFX01U(BDN(1,NWS),ERR)
      RETURN
C
C... HERE FOR CODES 1,2 AND 16 - CONTROL BLOCK NOT WRITTEN TO TAPE
C
  200 CONTINUE
      RETURN
C------------------------------------------------------------------
      ENTRY DFX01M(NBYTE,SHBLK1,SHBLK2,IERR)
C
C... COPY ACCOUNTING BLOCKS AGAIN (WITH MINOR CHANGES)
C
      SHBLK1(4:4)='E'
      WRITE(SHBLK2(131:135),201) FRAME
  201 FORMAT(I5)
C
C... WRITE SHORT BLOCKS TO DATA SET (UNLESS ?FT)
C
      IF (SBLOCK(NWS)) THEN
              WRITE(ODN(1,NWS)) SHBLK1(1:20)
C
              WRITE(ODN(1,NWS)) SHBLK2(1:136)
              BYTES(NWS) = BYTES(NWS) + 156
      ENDIF
      NBYTE=BYTES(NWS)
C
C... DISPOSE PLOT FILE
C
       REWIND ODN(1,NWS)
      IF (.NOT.FTCHAN(NWS)) THEN
C   **HERE FOR DISPOSE IF AND WHEN TAPES ARE SUPPORTED FOR CONVEX**
C    DEFAULT IS STANDARD LABELS (UTFLAG=2 OR 4)
C    RESET IF NO LABELS SELECTED (UTFLAG=1 OR 3)
      ENDIF
C    CLOSE SCRATCH FILES
      CALL DFX01S(RDN(1,NWS),'DELETE',ERR)
      CALL DFX01S(GDN(1,NWS),'DELETE',ERR)
      CALL DFX01S(BDN(1,NWS),'DELETE',ERR)
      RETURN
      END
