      SUBROUTINE DFX401(MIX,MIY,MIX1,MIY1,GRID,NX,NY)
C    MIX,MIY IS GRID POSITION OF UPPER BOUND, MIX1,MIY1 IS RELATIVE
C    GRID POSITION OF ADJACENT LOWER BOUND
C    THE CONTOUR IS FOLLOWED WITH POSITIVE GRADIENT TO RIGHT
C    THE MARKER BIT IS ZEROED AFTER USE
      REAL GRID(NX,NY)
      LOGICAL DFXM33
      INCLUDE 'dfxc11.cmn'
      IX = MIX
      IY = MIY
      IX1 = MIX1
      IY1 = MIY1
      FIRST = .TRUE.
      LAST = .FALSE.
      I = 0
      HT = GRID(IX,IY)
      HT1 = GRID(IX+IX1,IY+IY1)
    1 DHT = HT - HT1
      FACT = 0.
      IF (DHT.EQ.0.) GO TO 2
      FACT = (HT-CH)/DHT
      DHT = ABS(DHT)
    2 X = FLOAT(IX1)*FACT + FLOAT(IX-1)
      Y = FLOAT(IY1)*FACT + FLOAT(IY-1)
C    LINEAR INTERPOLATION IS APPLIED BETWEEN ADJACENT POINTS TO GIVE
C    ACTUAL GRID INTERSECTION FOR CONTOUR
      IF (.NOT.OPEN) GO TO 3
      IF (FIRST) GO TO 4
      IF (IY1.NE.0) GO TO 5
      IF (IY.EQ.1.OR.IY.EQ.NY) GO TO 6
      GO TO 7
    5 IF (IX.EQ.1.OR.IX.EQ.NX) GO TO 6
    7 IF (IX1.NE.-1) GO TO 8
      CALL DFXM32(GRID(IX,IY))
C    MARKER BIT IS ZEROED WHEN ASSOCIATED PART OF GRID USED
      GO TO 8
    3 IF (IX1.NE.-1) GO TO 9
      IF (.NOT.DFXM33(GRID(IX,IY))) GO TO 6
      CALL DFXM32(GRID(IX,IY))
    9 IF (.NOT.FIRST) GO TO 8
      N2 = 5
      GO TO 8
    4 N2 = N + 4
      GO TO 8
    6 LAST = .TRUE.
      N2 = 6
    8 CALL DFX402(X,Y)
      IF (.NOT.LAST) GO TO 10
      IF (I.EQ.2) CALL DFX106(XC(2),YC(2))
      RETURN
C    CHECKS OTHER EDGES OF GRID CELL TO FIND NEXT INTERSECTION
   10 HT2 = GRID(IX+IY1,IY-IX1)
      IF (HT2.GE.CH) GO TO 11
      HT1 = HT2
      IHOLD = IX1
      IX1 = IY1
      IY1 = -IHOLD
      GO TO 12
   11 HT3 = GRID(IX+IX1+IY1,IY-IX1+IY1)
      IF (HT3.GE.CH) GO TO 13
      HT = HT2
      HT1 = HT3
      IX = IX + IY1
      IY = IY - IX1
      GO TO 12
   13 HT = HT3
      IX = IX + IX1 + IY1
      IY = IY - IX1 + IY1
      IHOLD = IY1
      IY1 = IX1
      IX1 = -IHOLD
   12 FIRST = .FALSE.
      GO TO 1
      END
C
C----------------------------------------------
C
