      SUBROUTINE DFX329(II)
C
C    II CONTROLS APPROPRIATE AXIS TICKING/VALUING
C
C    -1 LEFT OF Y-AXIS
C    -2 RIGHT OF Y-AXIS
C    -3 ON LOW OF X-AXIS
C    -4 ON UP OF X-AXIS
C
      CHARACTER*(*) ITEXT
      LOGICAL LEFT
      LOGICAL LABENT
      CHARACTER IXYAX*1,JVALTK*9
      LOGICAL SWCTR
      INCLUDE 'dfxc06.cmn'
      INCLUDE 'dfxc02.cmn'
      INCLUDE 'dfxc02s.cmn'
      INCLUDE 'dfxc00.cmn'
      INCLUDE 'dfxc00s.cmn'
      INCLUDE 'dfxc05.cmn'
      INCLUDE 'dfxc12.cmn'
      SWCTR = WCTR
      Y0TS = Y0T
      I = II
      LABENT = .FALSE.
C    TICKING/VALUING - NOT LABELLING ENTRY
      IF (AXLAB) THEN
         JVALTK = 'VALUING'
      ELSE
         JVALTK = 'TICKING'
      ENDIF
      JV = 7
      IF (I.GE.-2) THEN
                 GO TO 31
      ELSE
                 GO TO 30
      ENDIF
C    ALTERNATIVE ENTRY IS FOR LABELLING
C    STRUCTURE IS DUE TO ADDITIONAL CHARACTER ARGUMENT
      ENTRY DFX330(II,ITEXT)
      LABENT = .TRUE.
      SWCTR = WCTR
      Y0TS = Y0T
      JVALTK = 'LABELLING'
      JV = 9
      IF (II.LT.-2) THEN
C    -3/-4 IS X-AXIS
          I = 1
          LEFT = (II.EQ.-3)
          GO TO 30
      ELSE
C    -1/-2 IS Y-AXIS
          I = 2
          LEFT = (II.EQ.-1)
          GO TO 31
      ENDIF
C    HERE FOR X-AXIS TICKING/VALUING/LABELLING
   30 A1 = YGL
      IXYAX = 'X'
      IF (YGL.EQ.YGU) GO TO 34
      A2 = YGU
      A3 = YAT
      B1 = AMIN1(A1,A2)
      B2 = AMAX1(A1,A2)
      IF ((A3.LT.B1).OR.(A3.GT.B2)) GO TO 3
      ZZ = YTB2 - YTB1
      IF (YTYPE.EQ.1) GO TO 2
      IF (YTYPE.NE.2) GO TO 10
      IF (B1.LE.0.0) GO TO 11
      A1 = ALOG10(A1)
      A2 = ALOG10(A2)
      A3 = ALOG10(A3)
    2 ZZ = ZZ*DC1
      Z = ((A3-A1)/(A2-A1))*ZZ
      IF (LABENT) THEN
          Y0T = Z
          IF (.NOT.LEFT) Y0T = Z - ZZ
C    FORCE TRANSFORM
          WCTR = .TRUE.
      ENDIF
    4 CALL DFX137
C    FORCE TRANSFORM
      IF (LABENT) THEN
          CALL DFX310(ITEXT,I,LEFT)
      ELSE
          IF (AXLAB) I = I + 20
          CALL DFX311(I,Z)
      ENDIF
   99 CONTINUE
      Y0T = Y0TS
      WCTR = SWCTR
      RETURN
   31 A1 = XGL
C    HERE FOR Y-AXIS TICKING/VALUING/LABELLING
      IXYAX = 'Y'
      IF (XGL.EQ.XGR) GO TO 34
      A2 = XGR
      A3 = XAT
      B1 = AMIN1(A1,A2)
      B2 = AMAX1(A1,A2)
      IF ((A3.LT.B1).OR.(A3.GT.B2)) GO TO 3
      ZZ = XTB2 - XTB1
      IF (XTYPE.EQ.1) GO TO 32
      IF (XTYPE.NE.2) GO TO 10
      IF (B1.LE.0.0) GO TO 11
      A1 = ALOG10(A1)
      A2 = ALOG10(A2)
      A3 = ALOG10(A3)
   32 ZZ = ZZ*DC1
      Z = ((A3-A1)/(A2-A1))*ZZ
      IF (LABENT) THEN
          Y0T = Z
          IF (.NOT.LEFT) Y0T = Z - ZZ
C    FORCE TRANSFORM
          WCTR = .TRUE.
      ENDIF
      GO TO 4
    3 IF (ICHECK.GT.0) WRITE(ERRREC,23)IXYAX,JVALTK(1:JV),ROUTIN
      CALL DFX130(0)
   23 FORMAT(1H0,'**DIMFILM WARNING** ',A1,'-AXIS ',A,' CALLED WITH AXIS
     1 NOT IN RANGE'/1H ,21X,'ORIGINATED IN ',A)
      GO TO 99
   10 IF (ICHECK.GT.0) WRITE(ERRREC,20)IXYAX,JVALTK(1:JV),ROUTIN
      CALL DFX130(0)
   20 FORMAT(1H0,'**DIMFILM WARNING** ',A1,'-AXIS ',A,' CALLED WITH INCO
     1RRECT AXIS TYPE - MUST BE LINEAR OR LOG SCALE ORTHOGONAL TO THIS A
     2XIS'/1H ,21X,'ORIGINATED IN ',A)
      GO TO 99
   11 IF (ICHECK.GT.0) WRITE(ERRREC,21)IXYAX,JVALTK(1:JV),ROUTIN
      CALL DFX130(0)
   21 FORMAT(1H0,'**DIMFILM WARNING** ',A1,'-AXIS ',A,' CALLED WITH LOGA
     1RITHMIC RANGE NON-POSITIVE IN PART FOR AXIS ORTHOGONAL TO THIS AXI
     2S'/1H ,21X,'ORIGINATED IN ',A)
      GO TO 99
   34 IF (ICHECK.GT.0) WRITE(ERRREC,33)IXYAX,JVALTK(1:JV),ROUTIN
      CALL DFX130(0)
   33 FORMAT(1H0,'**DIMFILM WARNING** ',A1,'-AXIS ',A,' CALLED WITH UNSE
     1T (OR ZERO RANGE) ORTHOGONAL AXIS'/1H ,21X,'ORIGINATED IN ',A)
      GO TO 99
      END
C
C----------------------------------------------
C
