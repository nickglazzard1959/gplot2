      SUBROUTINE DFX324(I1)
C    THIS ROUTINE MUST SET MONO FOR VALUING AND RESET ON EXIT
C    REFERENCES TO DFX306/DFX307/DFX308 REQUIRE THIS
      INCLUDE 'dfxc00.cmn'
      INCLUDE 'dfxc00s.cmn'
      INCLUDE 'dfxc01.cmn'
      INCLUDE 'dfxc01s.cmn'
      INCLUDE 'dfxc02.cmn'
      INCLUDE 'dfxc02s.cmn'
      INCLUDE 'dfxc04.cmn'
      INCLUDE 'dfxc06.cmn'
      LOGICAL FACT,SMONSP,NIL
      REAL RLEV(5)
      REAL XPART(4),YPART(4)
      INCLUDE 'dfxc10.cmn'
      INCLUDE 'dfxc10s.cmn'
      INCLUDE 'dfxc03.cmn'
      INCLUDE 'dfxc05.cmn'
      INCLUDE 'dfxc12.cmn'
      REAL TPART(4)
      CS1(I) = (FLOAT(I)-1.)*(C1MONO+C1SEP) + C1MONO
C    FUNCTION DEFINITION DETAILED IN DFX309
      DATA TPART/0.,1.,0.,-1./
      DATA DL10/1.0/
      DATA XPART/-1.,0.,-1.,-2./,YPART/-1.,-.5,0.,-.5/
      CALL DFX300
      SMONSP = MONSP
      MONSP = .TRUE.
      I = I1
C    THIS IS POINTER FOR VALUES, TICKING OR GRIDDING
C    -1 - POLAR OUTLIN ONLY
C    0 - POLAR BOUNDARY PRODUCED WITH 90 DEGREE RADII
C    1 - VALUES AT EXTREMITIES
C    2 - VALUES AT EXTREMITIES AND AT 90 DEGREES
C    3 TICKING AT EXTREMITIES
C    4 TICKING AT EXTREMITIES AND AT 90 DEGREES
C    5 GRIDDING
      IF ((I.GE.3).OR.(I.LE.0)) CALL DFX147(3)
C    FORCE INTENSITY/COLOUR 3 FOR TICKING/GRIDDING PERFORMED HERE
C    AND FOR OUTLINES
      JJ = -10
      DHOLD = DEGPRT
      XD = XTB2 - XTB1
      YD = YTB2 - YTB1
      S = AMIN1(XD,YD)
      TIK = TC1*S
      IQ = 1
      ISDASH = IDASH
      IF (I.EQ.3.OR.I.EQ.4) IDASH = 0
      IF (RGL.GE.RGR) GO TO 100
      A1 = THGL
      A2 = THGR
      IF (THGL.GT.THGR) A1 = A1 - TWOPI
      TCS1 = TC1
      TCC1 = TC1
      AD = A2 - A1
      IF (RTYPE.EQ.2.AND.RGL.LT.1.) GO TO 102
      AZL = RGL
      AZR = RGR
      CALL DFX319
      IF (I.EQ.0) GO TO 200
      IF (I.EQ.-1) GO TO 201
      IF (RTYPE.NE.2) GO TO 1
C    HERE FOR LOGARITHMIC
      AZL = ALOG10(RGL)
      AZR = ALOG10(RGR)
      IQ = -1
      DIST = AZR - AZL
      IF (DIST.LT.LOGMIN) GO TO 30
      BB = AZL
      K = INT(BB)
      IF (BB.LT.0.0) K = K - 1
      C = AZL - FLOAT(K)
      J = INT(10.**C)
      S1 = FLOAT(J)*(10.**FLOAT(K))
      IF (J.GE.10) J = 1
C    THIS CORRECTS CASE WITH ZERO MANTISSA AND NEGATIVE CHARACTERISTIC
      S1 = ALOG10(S1)
      CALL DFX148(3,RLTI)
      NIL = .FALSE.
      IF (DIST.GE.LOGMAX) NIL = .TRUE.
      DIFF01 = TD01*ABS(AZR-AZL)
      CS4 = CS1(4)
      IF (S1.GE.(AZL-DIFF01)) GO TO 50
      S1 = S1 + DL(J)
      J = J + 1
      IF (J.EQ.10) J = 1
   50 SSH = AMIN1(DC6*YD,DC7*RSCALE*DL10/CS4)
      CS = .5*CS4*SSH
      JJ = J
      IF (I.GT.2) GO TO 3
      S = S1
      CR = COS(THGL)*RSCALE
      SR = SIN(THGL)*RSCALE
      IF (JJ.EQ.1) GO TO 40
   53 S1 = S1 + DL(JJ)
      S = S1
      IF (S1.GT.AZR+DIFF01) GO TO 6
      JJ = JJ + 1
      IF (JJ.NE.10) GO TO 53
   40 IF (S1.LT.DIFF01) S1 = S1 + DL10
      IF (DEGPRT.LT.0.) DEGPRT = ATAN((2.*CS)/(S1*RSCALE))
      IF (AD.GT.(TWOPI-2.*DEGPRT).AND.AD.LT.(TWOPI-AD*TD01)) TCS1 = 0.0
C    THIS FORCES EXTREME VALUES TO APPEAR ADJACENT TO RADII
      TC1 = TCS1
      CALL DFX321(DX,DY,THGL,1,SSH,CS)
      TC1 = TCC1
   52 X = RXR + S*CR + DX
      Y = RYR + S*SR + DY
      CALL DFX110(X,Y)
      F = DFX302(S)
      CALL DFX307(F,X,Y,3,SSH)
      S = S + DL10
      IF (S.LE.AZR+DIFF01) GO TO 52
      S = S1
      IF (I.EQ.1) GO TO 58
      A = -TWOPI
      DO 54 II=1,8
      JJ = II
      IF (JJ.GT.4) JJ = JJ - 4
      IF ((A-DEGPRT).LE.A1.OR.(A+DEGPRT).GE.A2) GO TO 55
      CR = COS(A)*RSCALE
      SR = SIN(A)*RSCALE
      DX = CS*XPART(JJ) + TIK*TPART(JJ)
      DY = SSH*YPART(JJ) + TIK*TPART(5-JJ)
C    SPACE TO ALLOW FOR TICK CLEARANCE
   56 X = RXR + S*CR + DX
      Y = RYR + S*SR + DY
      CALL DFX110(X,Y)
      F = DFX302(S)
      CALL DFX307(F,X,Y,3,SSH)
      S = S + DL10
      IF (S.LE.AZR+DIFF01) GO TO 56
      S = S1
   55 A = A + PIBY2
   54 CONTINUE
   58 IF ((A2-A1).GT.(TWOPI-DEGPRT)) GO TO 6
      TC1 = TCS1
      CALL DFX321(DX,DY,THGR,2,SSH,CS)
      TC1 = TCC1
      CR = COS(THGR)*RSCALE
      SR = SIN(THGR)*RSCALE
   57 X = RXR + S*CR + DX
      Y = RYR + S*SR + DY
      CALL DFX110(X,Y)
      F = AINT(S)
      CALL DFX307(F,X,Y,3,SSH)
      S = S + DL10
      IF (S.LE.AZR+DIFF01) GO TO 57
      GO TO 6
    1 IF (RADIV.LE.0.0) GO TO 30
      DIFF = RADIV
      DIST = ABS(AZR-AZL)
      IF (DIFF.LT..01*DIST.OR.DIFF.GE..5*DIST) GO TO 30
      GO TO 2
C    DIFF LIMITED TO SENSIBLE VALUES
   30 DIST = ABS(AZR-AZL)
      A = ALOG10(DIST)
      J = INT(DFX302(A))
      BB = 10.**(ABS(A-FLOAT(J)))
      D = .2
      IF (BB.GE.3.) D = .5
      IF (BB.GE.7.) D = 1.
      DIFF = D*10.**J
    2 J = INT(AZL/DIFF)
      S1 = FLOAT(J)*DIFF
      DIFF01 = TD01*(AZR-AZL)
      IF (S1.LE.(AZL-DIFF01)) S1 = S1 + DIFF
      S = S1
      IF (I.GT.2) GO TO 3
C    ENSURE ONLY BEGIN/END VALUES FOR RANGES S.T. INTERVALS NOT
C    SUFFICIENLTY LARGE TO BE SIGNIFIGENT TO 2 DEC. PLACES.
      IF ((AZR-AZL).LT..01*AZL) GO TO 60
C    JUMP FOR BEGIN/END VALUES ONLY
      V2 = AZR
      V1 = AZL
      V1 = AMAX1(DIFF,V1)
      V2 = DFX302(ALOG10(V2))
      V1 = DFX302(ALOG10(V1))
      C1 = ABS(V2-V1)
      IF (C1.GT.2.) GO TO 80
      IF (AZR.GE.1000.0) GO TO 80
      IF ((AZR-AZL).LT.1.0) GO TO 80
      V1 = 0.0
C    THIS ENSURES NO COMMON FACTOR FOR RANGES > 1.0 IN (0.,1000.0)
      GO TO 81
   80 IF (C1.GE.2.) V1 = V1 + 1.
      IF (C1.NE.0.) GO TO 81
      VJ = DFX302(ALOG10(ABS(DIFF)))
      IF (ABS(V1-VJ).GT.2.) V1 = V1 - 1.
C    IF VALUES ALL OF FORM N.YZ (WITH COMMON FACTOR) I.E. C1 = 0,
C    AND DIFF IS NOT SIGNIFICANT TO SAME FACTOR (E.G. IT IS .00D)
C    THEN FACTOR IS ADJUSTED TO PLOT VALUES AS NY.Z (WHEN DIFFERENCE
C    BECOMES .0D)
   81 FACTOR = 10.**V1
      FACT1 = 1./FACTOR
      FACT = .TRUE.
      IF (IQ.EQ.-1) FACT = .FALSE.
      IF (IQ.EQ.-1) FACT1 = 1.
      IF (C1.GE.3.) FACT = .FALSE.
      CS6 = CS1(6)
      SSH = AMIN1(DC6*YD,DC7*ABS(DIFF*RSCALE)/CS6)
      CS = .5*CS6*SSH
      CFS = CS1(2)*SSH
      IF (S1.LT.DIFF01) S1 = S1 + DIFF
      IF (DEGPRT.LT.0.) DEGPRT = ATAN((2.*CS)/(S1*RSCALE))
      IF (AD.GT.(TWOPI-2.*DEGPRT).AND.AD.LT.(TWOPI-AD*TD01)) TCS1 = 0.0
C    THIS FORCES EXTREME VALUES TO APPEAR ADJACENT TO RADII
      TC1 = TCS1
      CALL DFX321(DX,DY,THGL,1,SSH,CS)
      CR = COS(THGL)*RSCALE
      SR = SIN(THGL)*RSCALE
    8 X = RXR + S*CR + DX
      Y = RYR + S*SR + DY
      CALL DFX308(FACT,FACT1,SSH,S,X,Y,IQ)
      S = S + DIFF
      IF (S.LE.AZR+DIFF01) GO TO 8
      IF (.NOT.FACT) GO TO 11
      IF (ABS(V1).LT.1.E-10) GO TO 11
      S = .5*(AZL+AZR)
      CALL DFX321(DX,DY,THGL,2,SSH,CFS)
      X = RXR + S*COS(THGL)*RSCALE + DX
      Y = RYR + S*SIN(THGL)*RSCALE + DY
      CALL DFX307(V1,X,Y,1,SSH)
   11 TC1 = TCC1
      S = S1
      IF (S.GT.AZR+DIFF01) GO TO 6
      IF (I.EQ.1) GO TO 7
      A = -TWOPI
      DO 4 II=1,8
      JJ = II
      IF (JJ.GT.4) JJ = JJ - 4
      IF ((A-DEGPRT).LE.A1.OR.(A+DEGPRT).GE.A2) GO TO 5
      CR = COS(A)*RSCALE
      SR = SIN(A)*RSCALE
      DX = CS*XPART(JJ) + TIK*TPART(JJ)
      DY = SSH*YPART(JJ) + TIK*TPART(5-JJ)
    9 X = RXR + S*CR + DX
      Y = RYR + S*SR + DY
      CALL DFX308(FACT,FACT1,SSH,S,X,Y,IQ)
      S = S + DIFF
      IF (S.LE.AZR+DIFF01) GO TO 9
      IF (.NOT.FACT) GO TO 12
      IF (ABS(V1).LT.1.E-10) GO TO 12
      S = .5*(AZL+AZR)
      J = JJ + 2
      IF (J.GT.4) J = J - 4
      X = RXR + S*COS(A)*RSCALE
      Y = RYR + S*SIN(A)*RSCALE
      DX = CFS*XPART(J) + TIK*TPART(J)
      DY = SSH*YPART(J) + TIK*TPART(5-J)
      X = X + DX
      Y = Y + DY
      CALL DFX307(V1,X,Y,1,SSH)
   12 S = S1
    5 A = A + PIBY2
    4 CONTINUE
    7 IF ((A2-A1).GT.(TWOPI-DEGPRT)) GO TO 6
C    THIS JUMP TO AVOID OVERLAP IF NEARLY 360 COVERAGE
      TC1 = TCS1
      CALL DFX321(DX,DY,THGR,2,SSH,CS)
      TC1 = TCC1
      CR = COS(THGR)*RSCALE
      SR = SIN(THGR)*RSCALE
   10 X = RXR + S*CR + DX
      Y = RYR + S*SR + DY
      CALL DFX308(FACT,FACT1,SSH,S,X,Y,IQ)
      S = S + DIFF
      IF (S.LE.AZR + DIFF01) GO TO 10
      S = S1
      IF (.NOT.FACT) GO TO 6
      IF (ABS(V1).LT.1.E-10) GO TO 6
      S = .5*(AZL+AZR)
      CALL DFX321(DX,DY,THGR,1,SSH,CFS)
      X = RXR + S*COS(THGR)*RSCALE + DX
      Y = RYR + S*SIN(THGR)*RSCALE + DY
      CALL DFX307(V1,X,Y,1,SSH)
    6 CALL DFX301
      IDASH = ISDASH
      DEGPRT = DHOLD
      CALL DFX147(1)
      MONSP = SMONSP
      RETURN
    3 CALL DFX147(3)
      IF (JJ.GT.1) CALL DFX147(NRGB)
      DEGPRT = ABS(DEGPRT)
      T = 1.
      IF (JJ.GT.1) T = TC2
      IF (S1.LE.AZL+DIFF01) CALL DFX325(S1,JJ,DIFF,T,NIL)
      IF (S1.GE.AZR-DIFF01) GO TO 6
      IWAS = 3
      IF (IRGBN.EQ.NRGB) IWAS = NRGB
C    N.B. ICOLPT(NRGB) = NRGB, ALWAYS
      T1 = T
      J1 = JJ
      S = S1
      IF (I.EQ.5) GO TO 13
      DX = -TIK*SIN(THGL)
      DY = TIK*COS(THGL)
      CR = COS(THGL)*RSCALE
      SR = SIN(THGL)*RSCALE
   19 X = RXR + S*CR
      Y = RYR + S*SR
      CALL DFX110(X,Y)
      IF (T.NE.0.0) CALL DFX106(X+DX*T,Y+DY*T)
      CALL DFX325(S,JJ,DIFF,T,NIL)
      IF (S.LT.AZR-DIFF01) GO TO 19
      IF (I.EQ.3) GO TO 17
      S = S1
      T = T1
      JJ = J1
      CALL DFX147(IWAS)
      DX = 0.0
      DY = TIK
      A = -TWOPI
      DO 14 II=1,8
      IF ((A-DEGPRT).LE.A1.OR.(A+DEGPRT).GE.A2) GO TO 15
      CR = COS(A)*RSCALE
      SR = SIN(A)*RSCALE
   16 X = RXR + S*CR
      Y = RYR + S*SR
      CALL DFX110(X-DX*T,Y-DY*T)
      CALL DFX106(X+DX*T,Y+DY*T)
      CALL DFX325(S,JJ,DIFF,T,NIL)
      IF (S.LT.AZR-DIFF01) GO TO 16
      S = S1
      T = T1
      CALL DFX147(IWAS)
      JJ = J1
   15 DZ = DX
      DX = DY
      DY = DZ
      A = A + PIBY2
   14 CONTINUE
   17 S = S1
      T = T1
      CALL DFX147(IWAS)
      JJ = J1
      DX = TIK*SIN(THGR)
      DY = -TIK*COS(THGR)
      CR = COS(THGR)*RSCALE
      SR = SIN(THGR)*RSCALE
   18 X = RXR + S*CR
      Y = RYR + S*SR
      CALL DFX110(X,Y)
      CALL DFX106(X+DX*T,Y+DY*T)
      CALL DFX325(S,JJ,DIFF,T,NIL)
      IF (S.LT.AZR-DIFF01) GO TO 18
      CALL DFX147(3)
      GO TO 6
   13 IL = 1
      RLEV(1) = AZL
C    INTENSITY DROP ETC...
      R1 = AZR/FLOAT(NLEV)
      RD = R1
   20 IF (RD.GT.S) GO TO 21
      RD = RD + R1
      GO TO 20
   21 RR = S*RSCALE
      TA1 = THGL*ANGCON(2,ANGRP(3))
      TA2 = THGR*ANGCON(2,ANGRP(3))
      CALL DFX500(RXR,RYR,RR,TA1,TA2,.TRUE.)
      SL = S
      CALL DFX325(S,JJ,DIFF,T,NIL)
      IF (S.GT.AZR-DIFF01) GO TO 22
      IF (RD.GT.S) GO TO 21
      IF (IL.EQ.NLEV) GO TO 21
      IF (RD-AZL.LT..4*R1.OR.AZR-RD.LT..4*R1) GO TO 21
      IL = IL + 1
      RLEV(IL) = SL
      IF (S-RD.LT.RD-SL) RLEV(IL) = S
      RD = RD + R1
      GO TO 21
C    HERE FOR RADIAL LINES
   22 JOFF = NLEV - IL
      RLEV(IL+1) = AZR
      CALL DFX147(3)
      DO 23 II=1,IL
      A = 0.0
      DA = RTHLEV(II+JOFF)
      A = AINT(THGL/DA)*DA
      IF (A.LE.THGL) A = A + DA
      IF (THGL.GT.THGR) A = A - TWOPI
   24 CR = COS(A)*RSCALE
      SR = SIN(A)*RSCALE
      X1 = RXR + CR*RLEV(II)
      Y1 = RYR + SR*RLEV(II)
      X2 = RXR + CR*RLEV(II+1)
      Y2 = RYR + SR*RLEV(II+1)
      CALL DFX110(X1,Y1)
      CALL DFX106(X2,Y2)
      A = A + DA
      IF (A.GE.THGR) GO TO 23
      GO TO 24
   23 CONTINUE
      GO TO 6
  100 IF (ICHECK.GT.0) WRITE(ERRREC,101)
  101 FORMAT(1H0,'**DIMFILM WARNING**  UNSET R-RANGE DETECTED IN CALL TO
     1 VALUING OR TICKING OF POLAR PLOT'/1H ,21X,'CALL IGNORED')
      CALL DFX130(0)
      GO TO 6
  102 IF (ICHECK.GT.0) WRITE(ERRREC,103)
  103 FORMAT(1H0,'**DIMFILM WARNING**  CALL OF VALUING OR TICKING OF POL
     1LAR PLOT DETECTS NON-POSITIVE PART OF RANGE'/1H ,21X,'FOR LOGARITH
     2MIC RADIAL VALUES'/1H ,21X,'CALL IGNORED')
      CALL DFX130(0)
      GO TO 6
  200 CALL DFX322
      GO TO 6
  201 CALL DFX323
      GO TO 6
   60 A = THGL*CON1
      IF (A.GT.90.0.AND.A.LT.270.0) A = A + 180.0
      IF (A.GE.360.0) A = A - 360.0
      X0T = RXR
      Y0T = RYR
C    FORCE TRANSFORM
      CALL DFX137
      AA = A*CON*ANGCON(2,ANGRP(1))
C     CONVERT TO RADIANS THEN CONVERT BACK TO TYPE REQUIRED BY ROTATE
      CALL DFX133(AA)
      Z = AMIN1(XD,YD)
      SH = AMIN1(DC6*Z,DC14*Z*CS1(6))
      X1 = AZL*RSCALE
      X2 = AZR*RSCALE
      V1 = AZL
      V2 = AZR
      Y1 = -1.5*SH
      ICH = 1
      IF (A.LE.90.0.OR.A.GE.270.0) GO TO 61
      Z = X1
      X1 = -X2
      X2 = -Z
      Y1 = -Y1
      Z = V1
      V1 = V2
      V2 = Z
      ICH = 2
   61 Y2 = Y1
      I = 1
      CALL DFX306(V1,X1,Y1,V2,X2,Y2,SH,ICH,I)
      GO TO 6
      END
C
C----------------------------------------------
C
