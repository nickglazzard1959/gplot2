      SUBROUTINE DFX308(FACT,FACTOR,SH,S1,X1,Y1,I1)
C    REFERENCING ROUTINE MUST SET MONO AND RESTORE AFTERWARDS
C    CURRENT REFERENCES FROM DFX309 AND DFX324
      INCLUDE 'dfxc00.cmn'
      INCLUDE 'dfxc00s.cmn'
      INCLUDE 'dfxc01.cmn'
      INCLUDE 'dfxc01s.cmn'
      INCLUDE 'dfxc02.cmn'
      INCLUDE 'dfxc02s.cmn'
      INCLUDE 'dfxc05.cmn'
      INCLUDE 'dfxc12.cmn'
      CHARACTER*11 II
      LOGICAL FACT
      CS1(I) = (FLOAT(I)-1.)*(C1MONO+C1SEP) + C1MONO
C    SEE DEFINITION IN DFX309
      DX = 0.0
      I = I1
C    STANDARD CALL HAS I = -1  -  PARTIAL LOG CYCLE VALUES
C                        = +1  -  PARALLEL X-AXIS
C                        = +2  -  RESERVED FOR PARALLEL Y-AXIS
C    ACTUAL CALLS IN RANGE (10,19) CORRESPOND TO I = +1, WITH ADDITIONAL
C    ACTION REQUIRED. I1 = 11  -  INTEGER VALUES ALONG X-AXIS REQUIRE
C                                 CENTRING (AND REAL 0.0).
C                        = 12  -  TO LEFT OF Y-AXIS, NO FURTHER ACTION
C                        = 13  -  TO RIGHT OF Y-AXIS, INTEGERS NEED
C                                 TO BE LEFT JUSTIFIED
      IADJ = 0
      IF (I.LT.10) GO TO 30
      IADJ = I - 10
      I = 1
   30 X = X1
      Y = Y1
      CALL DFX110(X,Y)
      FPN = S1
      HT = SH
      IF (I.LT.0) GO TO 10
      IF (.NOT.FACT) GO TO 1
      FPN = FPN*FACTOR
      IF (IZVAL) GO TO 20
      IF (FPN.GT.-99.995.AND.FPN.LT.999.995)
     1      CALL DFX204(1,FPN,IDUMMY,'(F6.2)')
C    CALL TO NUM SHOULD ONLY FAIL TO OCCUR AT LIMITING VALUE WHEN THE
C    ROUNDED VALUE EXCEEDS THE ACTUAL LIMITING VALUE FOR THE TESTED
C    RANGE - DUE TO TD01 FRACTION OF TOTAL RANGE USED IN DFX309 FOR
C    LIMIT TEST.  THIS WILL OCCUR ONLY FOR PECULIAR RANGES.
      RETURN
   20 FPN = FPN + SIGN(.5,FPN)
      INTFPN = INT(FPN)
      IF (INTFPN.LE.-100000.OR.INTFPN.GE.1000000) RETURN
C    SEE COMMENTS RELATING TO REAL VALUES ABOVE, AND NOTE THAT THIS
C    SHOULD ONLY OCCUR DUE TO ROUNDING.
C    SUCH EFFECTS SHOULD NOT (LOGICALLY) OCCUR IN ANY LOWER PATHS OF
C    THIS SUBROUTINE.
      ASSIGN 40 TO JUMP
      NDIG = 6
      IF (IADJ.NE.2) GO TO 50
   40 CALL DFX204(2,RDUMMY,INTFPN,'(I6)')
      RETURN
    1 IF (FPN.EQ.0.0) GO TO 2
      A = DFX302(ALOG10(ABS(FPN)))
      B = 10.**A
      FPN = FPN/B
      IF (IZVAL) GO TO 21
      IF (IADJ.NE.1.OR.A.NE.0.0) GO TO 60
      X = X + CS1(2)*SH
      CALL DFX110(X,Y)
   60 CALL DFX204(1,FPN,IDUMMY,'(F4.1)')
   22 IF (A.EQ.0.) RETURN
      GO TO (11,12),I
C    CORRECTIONS FOR STRING LENGTH
   11 X = X + CS1(4)*SH
      GO TO 13
   12 Y = Y + CS1(4)*SH
   13 CALL DFX307(A,X,Y,I,SH)
      RETURN
    2 IF (IZVAL) GO TO 61
      IF (IADJ.EQ.1) DX = CS1(2)*SH
      CALL DFX110(X+DX,Y)
      CALL DFX204(1,FPN,IDUMMY,'(F4.1)')
      RETURN
   61 IF (IADJ.EQ.1) DX = .5*CS1(1)*SH
      IF (IADJ.EQ.3) DX = -CS1(3)*SH
      CALL DFX110(X+DX,Y)
      CALL DFX204(2,RDUMMY,INT(FPN),'(I4)')
      RETURN
   21 FPN = FPN + SIGN(.5,FPN)
      INTFPN = INT(FPN)
      ASSIGN 41 TO JUMP
      NDIG = 4
      IF (IADJ.EQ.3.OR.(A.EQ.0.0.AND.IADJ.EQ.1)) GO TO 50
   41 CALL DFX204(2,RDUMMY,INTFPN,'(I4)')
      GO TO 22
   10 CALL DFX204(2,RDUMMY,10,'(I2)')
C    THIS MOD TO ACCOMMODATE LOG AXIS VALUES FOR LESS THAN TWO CYCLES
      DX = CS1(2)*SH
      CALL DFX110(X+DX,Y)
      F = ABS(FPN)
      II = '(''*+'',F5.2)'
      IF (F.GE.10.) II = '(''*+'',F6.2)'
      IF (F.GE.100.) II = '(''*+'',F7.2)'
      IF (F.LT..01) II = '(''*+'',E8.2)'
      IF (F.EQ.0.0) II = '(''*+'',F5.2)'
      CALL DFX204(1,FPN,IDUMMY,II)
      RETURN
   50 NUM = INTFPN
      IDIG = 1
      IF (NUM.GE.0) GO TO 51
      IDIG = 2
      NUM = -NUM
   51 NUM = NUM/10
      IF (NUM.EQ.0) GO TO 52
      IDIG = IDIG + 1
      GO TO 51
   52 IF (IADJ.EQ.3) GO TO 53
C    IADJ MUST BE 1 HERE OR ERROR
      IF (IADJ.NE.1) WRITE(ERRREC,54)
   54 FORMAT(1H1, 25H*****DIMFILM FAILURE*****/1H0,5X, 41HPLEASE REPORT
     1FAILURE IN DFX308 TO AUTHOR//)
      IF (IADJ.NE.1) CALL DFX005
      IF (NDIG.EQ.4) DX = .5*CS1(IDIG)*SH
      IF (NDIG.EQ.6) DX = -.5*CS1(NDIG-IDIG)*SH
      GO TO 55
   53 DX = -CS1(NDIG-IDIG)*SH
   55 X = X + DX
      CALL DFX110(X,Y)
      GO TO JUMP,(40,41)
      END
