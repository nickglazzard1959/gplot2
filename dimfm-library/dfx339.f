      SUBROUTINE DFX339(R,THETA,N1)
      INCLUDE 'dfxc02.cmn'
      INCLUDE 'dfxc02s.cmn'
      INCLUDE 'dfxc00.cmn'
      INCLUDE 'dfxc00s.cmn'
      INCLUDE 'dfxc06.cmn'
      REAL R(N1),THETA(N1)
      REAL COEFF(6),XF(6),YF(6)
      LOGICAL LAST
      LOGICAL RRLOG
      REAL SAVE(4)
      CHARACTER*5 KRTH
      INCLUDE 'dfxc03.cmn'
      INCLUDE 'dfxc05.cmn'
      INCLUDE 'dfxc12.cmn'
      CALL DFX300
      ICSAVE = ICHECK
      RRLOG = .FALSE.
      IF (RTYPE.EQ.2) RRLOG = .TRUE.
      N = N1
      IF (N.LT.2) GO TO 20
      XD = XTB2 - XTB1
      YD = YTB2 - YTB1
      IF (FIXR) GO TO 1
      RRGL = R(1)
      RRGR = R(1)
      DO 3 I=2,N
      V = R(I)
      IF (V.LT.RRGL) RRGL = V
      IF (V.GT.RRGR) RRGR = V
    3 CONTINUE
      KRTH = 'R'
      IF (RRGL.EQ.RRGR) GO TO 32
      IF (RRGL.LT.0.0) GO TO 22
      RGL = RRGL
      RGR = RRGR
    1 IF (FIXTH) GO TO 2
      TTHGL = THETA(1)
      TTHGR = THETA(1)
      DO 4 I=2,N
      V = THETA(I)
      IF (V.LT.TTHGL) TTHGL = V
      IF (V.GT.TTHGR) TTHGR = V
    4 CONTINUE
      KRTH = 'THETA'
      IF (TTHGL.EQ.TTHGR) GO TO 32
      TTHGL = TTHGL*ANGCON(1,ANGRP(2))
      TTHGR = TTHGR*ANGCON(1,ANGRP(2))
      IF ((TTHGR-TTHGL).LT.TWOPI) GO TO 26
      THGL = 0.0
      THGR = TWOPI
      GO TO 2
   26 THGL = DFX004(TTHGL)
      THGR = DFX004(TTHGR)
    2 IF (.NOT.RRLOG) GO TO 5
      IF (RGL.LT.1.0) GO TO 24
C    IF JUMPS MUST BE ZERO DUE TO PREVIOUS CHECKS
    5 IF (ICHECK.GT.1) ICHECK = -2
C    HERE FOR ACTUAL PLOTTING AND CENTRE DETERMINATION
      CALL DFX319
      DDX = DC2*XD
      DDY = DC2*YD
      SAVE(1) = XTB1
      SAVE(2) = XTB2
      SAVE(3) = YTB1
      SAVE(4) = YTB2
      X1 = XTB1 + DDX
      X2 = XTB2 - DDX
      Y1 = YTB1 + DDY
      Y2 = YTB2 - DDY
      CALL DFX128(X1,X2,Y1,Y2)
      IF (.NOT.RRLOG) GO TO 10
      DO 11 J=1,N
      I = J
      IF (R(I).LT.1.0) GO TO 28
   11 CONTINUE
   12 N = I
      IF (I.LT.2) GO TO 500
   10 CONTINUE
      Z = R(1)
      IF (RRLOG) Z = ALOG10(Z)
      T = THETA(1)*ANGCON(1,ANGRP(2))
      X = RXR + Z*COS(T)*RSCALE
      Y = RYR + Z*SIN(T)*RSCALE
      CALL DFX110(X,Y)
      IF (INTNDG.GT.0) CALL DFX200(IICHAR)
      INTEND = INTNDG
      IF (NDEG.GT.0) GO TO 200
      DO 6 I=2,N
      Z = R(I)
      IF (RRLOG) Z = ALOG10(Z)
      T = THETA(I)*ANGCON(1,ANGRP(2))
      X = RXR + Z*COS(T)*RSCALE
      Y = RYR + Z*SIN(T)*RSCALE
      IF (NDEG.EQ.0) THEN
      CALL DFX124(X,Y)
      ELSE
      CALL DFX110(X,Y)
      CALL DFX200(IICHAR)
      ENDIF
    6 CONTINUE
  500 CALL DFX128(SAVE(1),SAVE(2),SAVE(3),SAVE(4))
      GO TO 100
  200 I1 = 1
      I2 = 1
      ICCS = ICHECK
      LIM2 = NDEG + 1
      I3 = NDEG + 1
      LAST = .FALSE.
      IF (I3.EQ.N) LAST = .TRUE.
      IF = NDEG/2
      STEP = FLOAT(IXSTEP)
      LIM = IXSTEP - 1
      IF (INTNDG.EQ.1) CALL DFX200(IICHAR)
      DO 210 I=1,LIM2
      F = THETA(I)*ANGCON(1,ANGRP(2))
      XF(I) = F
      F = R(I)
      IF (RRLOG) F = ALOG10(F)
  210 YF(I) = F
      ICHECK = ICSAVE
      CALL DFX150(NDEG,XF,YF,COEFF,ISING)
      ICHECK = ICCS
      IF (ISING.NE.0) GO TO 500
  202 XONE = THETA(I2)*ANGCON(1,ANGRP(2))
      XTWO = THETA(I2+1)*ANGCON(1,ANGRP(2))
      XD = (XTWO-XONE)/STEP
      DO 201 I=1,LIM
      XONE = XONE + XD
      CALL DFX151(NDEG,XONE,YVAL,COEFF)
      XP = RXR + YVAL*COS(XONE)*RSCALE
      YP = RYR + YVAL*SIN(XONE)*RSCALE
  201 CALL DFX106(XP,YP)
      YVAL = R(I2+1)
      IF (RRLOG) YVAL = ALOG10(YVAL)
      XP = RXR + YVAL*COS(XTWO)*RSCALE
      YP = RYR + YVAL*SIN(XTWO)*RSCALE
      INTEND = INTNDG
      CALL DFX124(XP,YP)
      INTNDG = INTEND
      INTEND = -1
      I2 = I2 + 1
      IF (.NOT.LAST) GO TO 206
      IF (I2.EQ.N) GO TO 500
      IF (I3.EQ.N) GO TO 202
  206 IF (I2.LE.IF) GO TO 202
  205 I1 = I1 + 1
      I3 = I3 + 1
      DO 211 I=1,LIM2
      II = I1 + I - 1
      F = THETA(II)*ANGCON(1,ANGRP(2))
      XF(I) = F
      F = R(II)
      IF (RRLOG) F = ALOG10(F)
  211 YF(I) = F
      ICHECK = ICSAVE
      CALL DFX150(NDEG,XF,YF,COEFF,ISING)
      ICHECK = ICCS
      IF (ISING.NE.0) GO TO 500
      XONE = THETA(I2)*ANGCON(1,ANGRP(2))
      XTWO = THETA(I2+1)*ANGCON(1,ANGRP(2))
      XD = (XTWO-XONE)/STEP
      DO 204 I=1,LIM
      XONE = XONE + XD
      CALL DFX151(NDEG,XONE,YVAL,COEFF)
      XP = RXR + YVAL*COS(XONE)*RSCALE
      YP = RYR + YVAL*SIN(XONE)*RSCALE
  204 CALL DFX106(XP,YP)
      YVAL = R(I2+1)
      IF (RRLOG) YVAL = ALOG10(YVAL)
      XP = RXR + YVAL*COS(XTWO)*RSCALE
      YP = RYR + YVAL*SIN(XTWO)*RSCALE
      INTEND = INTNDG
      CALL DFX124(XP,YP)
      INTNDG = INTEND
      INTEND = -1
      I2 = I2 + 1
      IF (I3.LT.N) GO TO 205
      LAST = .TRUE.
      GO TO 202
  100 CALL DFX301
      ICHECK = ICSAVE
      RETURN
   20 IF (ICHECK.GT.0) WRITE(ERRREC,21)ROUTIN,N
   21 FORMAT(1H0,'**DIMFILM WARNING**  THIRD PARAMETER IN CALL TO ',A,
     1' HAS ILLEGAL VALUE - ',I10/1H ,21X,'CALL IGNORED')
      CALL DFX130(0)
      GO TO 100
   32 IF (ICHECK.GT.0) WRITE(ERRREC,33)ROUTIN,KRTH
   33 FORMAT(1H0,'**DIMFILM WARNING**  ',A,' IN AUTO-MODE DETECTS CONSTA
     1NT VALUED DATA ARRAY ',A5/1H ,25X,'CALL IGNORED')
      CALL DFX130(0)
      GO TO 100
   22 IF (ICHECK.GT.0) WRITE(ERRREC,23) ROUTIN
   23 FORMAT(1H0,'**DIMFILM WARNING**  NEGATIVE R-VALUE FOUND IN CALL TO
     1 ',A/1H ,21X,'CALL IGNORED')
      CALL DFX130(0)
      GO TO 100
   24 IF (ICHECK.GT.0) WRITE(ERRREC,25) ROUTIN
   25 FORMAT(1H0,'**DIMFILM WARNING**  IN CALL TO ',A,' WITH LOGARITHMIC
     1 RADIAL VALUES A NON-POSITIVE PART OF R-RANGE OCCURRED'/1H ,21X,
     2  'CALL IGNORED')
      CALL DFX130(0)
      GO TO 100
   28 IF (ICHECK.GT.0) WRITE(ERRREC,29)I,ROUTIN
   29 FORMAT(1H0,'**DIMFILM WARNING**  THE ',I4,'TH R-VALUE IN CALL TO '
     1 ,A,' WITH LOGARITHMIC RADIALS WAS LESS THAN 1.0'/1H ,21X,
     2  'CALL TERMINATED')
      CALL DFX130(0)
      GO TO 12
      END
