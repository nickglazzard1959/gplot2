      PROGRAM FTUTLT(OUTPUT,TAPE6=OUTPUT)
C
CC PLAY WITH UTILITY LIBRARY
C
      CHARACTER*20 CMDS(10)
      CHARACTER*20 INSTR
      CHARACTER*50 UPSTR
      CHARACTER*100 LOSTR, NUPSTR
      INTEGER IVAL, NEWPOS, LOCASE6, UPCASE6, IGETOT
      REAL VAL
      LOGICAL IFROMC, RFROMC, XFROMC
#ifndef PORTF77
C
C TRY DYNAMIC MEMORY ALLOCATION. NOS ONLY.
C
      DIMENSION DYNAR(1)
      ILEN = 1000
      CALL CMMALF(ILEN,0,0,IFWA)
      IOFF = IFWA - LOCF(DYNAR(1))
      CALL TRYIT(DYNAR(IOFF+1),ILEN)
      CALL CMMFRF(IFWA)
#endif
C
      CMDS(1) = 'FIRST'
      CMDS(2) = 'SECOND'
      CMDS(3) = 'THIRD'
      CMDS(4) = 'FOURTH'
      CMDS(5) = 'FIFTH'
      CMDS(6) = 'SIXTH'
      CMDS(7) = 'SEVENTH'
      CMDS(8) = 'EIGHTH'
      CMDS(9) = 'NINTH'
      CMDS(10) = 'DONE'
C
      WRITE(6,100)
 100  FORMAT(1X,'TESTING UTIL LIB.')
      WRITE(6,*)' ENTER A CMD (FIRST ... NINTH), AN INT, REAL OR DONE'
   1  CONTINUE
C     WRITE(6,101)
C101  FORMAT('+PROMPT>')
      READ(5,102)INSTR
 102  FORMAT(A)
      WRITE(6,*)INSTR
      ICMD = LOOKUP( CMDS, 10, INSTR, .FALSE., .TRUE. )
      WRITE(6,103)ICMD
 103  FORMAT(1X,'ICMD=',I4)
      IF( ICMD .EQ. 10 )GOTO 199
      IF( ICMD .EQ. 0 )THEN
C
         WRITE(6,107)
 107     FORMAT(1X,'UNKNOWN CMD, TRYING REAL FIRST')
         IF( RFROMC(INSTR, FVAL,1,NEWPOS) )THEN
            WRITE(6,108)FVAL,NEWPOS
 108        FORMAT(1X,'OK REAL, VAL=',F12.6,' POS=',I3)
            WRITE(6,*)'... OR: ',FVAL
         ELSE
            WRITE(6,109)
 109        FORMAT(1X,'NOT REAL')
         ENDIF
C    
         WRITE(6,110)
 110     FORMAT(1X,'TRYING HEX NEXT')
         IF( XFROMC(INSTR,IVAL,1,NEWPOS) )THEN
            WRITE(6,111)IVAL
 111        FORMAT(1X,'OK HEX, VAL AS INT=',I8)
         ELSE
            WRITE(6,112)
 112        FORMAT(1X,'NOT ENTIRELY HEX')
         ENDIF
C         
         WRITE(6,104)
 104     FORMAT(1X,'TRYING INTEGER FINALLY')
         IF( IFROMC(INSTR,IVAL,1,NEWPOS) )THEN
            WRITE(6,105)IVAL,NEWPOS
 105        FORMAT(1X,'OK INT, VAL=',I8,' POS=',I3)
         ELSE
            WRITE(6,106)
 106        FORMAT(1X,'NOT INT')
         ENDIF
C        
      ENDIF
      GOTO 1
199   CONTINUE
C
C FURTHER TESTS FOR 6/12 CHARACTERS (LOWER CASE)
C
      UPSTR = 'AN UPPER CASE STRING'
      WRITE(6,200)UPSTR
 200  FORMAT(1X,'UPSTR INITIALIZED AS:',A)
      IUP = LNBC(UPSTR,1,LEN(UPSTR))
      WRITE(6,201)IUP
 201  FORMAT(1X,'UPSTR LNBC LENGTH = ',I3)
      ILOW = LOCASE6(UPSTR(1:IUP),LOSTR)
      WRITE(6,202)ILOW
 202  FORMAT(1X,'LOSTR LENGTH =',I3)
      WRITE(6,203)LOSTR(1:ILOW)
 203  FORMAT(1X,'LOSTR =',A)
      IUP6 = UPCASE6(LOSTR(1:ILOW),NUPSTR)
      WRITE(6,204)IUP6
 204  FORMAT(1X,'NUPSTR LENGTH =',I3)
      WRITE(6,205)NUPSTR(1:IUP6)
 205  FORMAT(1X,'NUPSTR =',A)
C
C TEST ODD 6/12 ESCAPES.
C
      UPSTR = 'UPPER CASE WITH AT (@) AND CARET (^) OK?'
      WRITE(6,300)UPSTR
 300  FORMAT(1X,'UPSTR NOW SET TO:',A)
      IUP = LNBC(UPSTR,1,LEN(UPSTR))
      WRITE(6,301)IUP
 301  FORMAT(1X,'UPSTR LNBC LENGTH = ',I3)
      ILOW = LOCASE6(UPSTR(1:IUP),LOSTR)
      WRITE(6,302)ILOW
 302  FORMAT(1X,'LOSTR LENGTH =',I3)
      WRITE(6,303)LOSTR(1:ILOW)
 303  FORMAT(1X,'LOSTR =',A)
      IUP6 = UPCASE6(LOSTR(1:ILOW),NUPSTR)
      WRITE(6,304)IUP6
 304  FORMAT(1X,'NUPSTR LENGTH =',I3)
      WRITE(6,305)NUPSTR(1:IUP6)
 305  FORMAT(1X,'NUPSTR =',A)
C
#ifndef PORTF77
      IJO = IGETOT()
      WRITE(6,*)'IJO = ',IJO
#endif
      STOP 'COMPLETED'
      END
C
      SUBROUTINE TRYIT(DYNMEM,NDYN)
      INTEGER NDYN
      REAL DYNMEM(NDYN)
C
      DO 1 I=1,NDYN
         DYNMEM(I) = 3*I
 1    CONTINUE
      WRITE(6,*)'DYNMEM(500)=',DYNMEM(500)
      RETURN
      END
