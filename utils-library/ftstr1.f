      PROGRAM STR1(OUTPUT,TAPE6=OUTPUT)
C
      IMPLICIT CHARACTER*1 (A-Z)
      INCLUDE 'utdecls.cmn'
C
      CHARACTER*160 CS
      INTEGER N, ISTAT, NRECS, I, J, ICH, IWHICH, IDX, IEND, IREC
      INTEGER ASTRS(KSTDIM,2), ISLEN
      INTEGER ASTR(KSTDIM), AFIND(KSTDIM), ASTR2(KSTDIM)
      INTEGER SORTS(KSTDIM,50), SHSORTS(10,10)
      INTEGER AOLD(KSTDIM), ANEW(KSTDIM), ASHORT(10), ASHORT2(10)
      INTEGER INDEXS(50)
C
C---- TEST STCTOA()
      WRITE(6,*)'STCTOA TEST'
      WRITE(6,*)'==========='
      N = STCTOA('FIRST STRING',ASTRS(1,1))
      WRITE(6,*)'FIRST STRING HAS ',N,' CHARACTERS.'
      N = STCTOA('SECOND STRING',ASTRS(1,2))
      WRITE(6,*)'SECOND STRING HAS ',N,' CHARACTERS.'
C
C---- TEST STATOC()
      WRITE(6,*)' '
      WRITE(6,*)'STATOC TEST'
      WRITE(6,*)'==========='
      N = STATOC(ASTRS(1,1),CS)
      WRITE(6,*)CS(1:N)
      N = STATOC(ASTRS(1,2),CS)
      WRITE(6,*)CS(1:N)
C
C---- TEST STBUF FUNCTIONS.
C---- OPEN AND WRITE 123 LINES.
      WRITE(6,*)' '
      WRITE(6,*)'STBUF TESTS'
      WRITE(6,*)'==========='
      WRITE(6,*)'*** OPEN STRING BUFFER.'
      ISTAT = STBUFOP(3)
      IF( ISTAT .NE. 0 )STOP 'STBUFOP() FAILED.'
      WRITE(6,*)'*** WRITE 123 LINES CONTAINING THE LINE NO TO BUFFER.'
      DO 1 I=1,123
         WRITE(CS,'(A,I4)')'LINE NUMBER',I
         N = STCTOA(CS(1:LNBC(CS)),ASTR)
         IF( STBUFWR(ASTR,3,I,NRECS) .NE. 0 )THEN
            WRITE(6,*)'STBUFWR() FAILED AT ',I
            STOP
         ENDIF
 1    CONTINUE
      WRITE(6,*)'NRECS = ',NRECS
C
C---- READ BACK IN RANDOM ORDER.
      WRITE(6,*)'*** READ 10 RANDOM LINES BACK.'
      DO 2 I=1,10
         IREC = INT( 123 * RANF() ) + 1
         IF( STBUFRD(3,IREC,NRECS,ASTR) .NE. 0 )THEN
            WRITE(6,*)'STBUFRD() FAILED FOR IREC ',IREC
            STOP
         ENDIF
         N = STATOC(ASTR,CS)
         WRITE(6,*)'RECORD ',IREC,' = ',CS(1:N)
 2    CONTINUE
C
C---- END BUFFER USAGE.
      WRITE(6,*)'*** CLOSE AND DISCARD THE STRING BUFFER.'
      ISTAT = STBUFEN(3)
      IF( ISTAT .NE. 0 )STOP 'STBUFEN() FAILED.'
C
C---- GENERATE 50 RANDOM ALPHANUMERIC STRINGS.
      WRITE(6,*)' '
      WRITE(6,*)'SORT TESTS'
      WRITE(6,*)'=========='
      WRITE(6,*)'*** MAKE 50 RANDOM STRINGS UP TO 20 CHARS LONG.'
      DO 10 I=1,50
         ISLEN = INT(20 * RANF()) + 1
         DO 11 J=1,ISLEN
            IF( J .EQ. 1 )THEN
               ICH = INT(25 * RANF() + 0.5) + 65
            ELSE
               IWHICH = INT(3 * RANF() + 0.5)
               IF( IWHICH .EQ. 1 )THEN
                  ICH = INT(25 * RANF() + 0.5) + 65
               ELSE IF( IWHICH .EQ. 2 )THEN
                  ICH = INT(9 * RANF() + 0.5) + 48
               ELSE
                  ICH = INT(25 * RANF() + 0.5) + 97
               ENDIF
            ENDIF
            SORTS(J,I) = ICH
 11      CONTINUE
         SORTS(ISLEN+1,I) = KSTEND
         N = STATOC(SORTS(1,I), CS)
         WRITE(6,*)CS(1:N)
 10   CONTINUE
C
C---- SORT STRING LINE NUMBERS INTO ASCENDING STRING ORDER.
C---- DISPLAY THE SORTED STRINGS.
      WRITE(6,*)'*** SORT THE RANDOM STRINGS AND DISPLAY THEM SORTED.'
      CALL STSORTI(SORTS, 50, INDEXS)
      DO 12 I=1,50
         J = INDEXS(I)
         N = STATOC(SORTS(1,J), CS)
         WRITE(6,*)'I=',I,' J=',J,' ',CS(1:N)
 12   CONTINUE
C
C---- TEST FIND FUNCTIONS.
      WRITE(6,*)' '
      WRITE(6,*)'FIND TESTS'
      WRITE(6,*)'=========='
      WRITE(6,*)'*** TEST STRING IS "HELLO".'
      N = STCTOA('HELLO',ASTR)
      N = STCTOA('LL',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND LL IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND LL IN HELLO AT ',IDX
      N = STCTOA('LO',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND LO IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND LO IN HELLO AT ',IDX
      N = STCTOA('HE',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND HE IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND HE IN HELLO AT ',IDX
      N = STCTOA('LL',AFIND)
      IDX = STFIND(ASTR,AFIND,3)
      WRITE(6,*)'FOUND LL IN HELLO AT ',IDX,' ISTART 3'
      N = STCTOA('NUTS',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND NUTS IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND NUTS IN HELLO AT ',IDX
      N = STCTOA('NUTTIER',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND NUTTIER IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND NUTTIER IN HELLO AT ',IDX
      N = STCTOA('HELLO',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND HELLO IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND HELLO IN HELLO AT ',IDX
      N = STCTOA('L',AFIND)
      IDX = STFIND(ASTR,AFIND,1)
      WRITE(6,*)'FOUND L IN HELLO AT ',IDX
      IDX = STFINDR(ASTR,AFIND)
      WRITE(6,*)'REVERSE FOUND L IN HELLO AT ',IDX
C
C---- TEST COPY AND REPLACE FUNCTIONS.
      WRITE(6,*)' '
      WRITE(6,*)'COPY AND REPLACE TESTS'
      WRITE(6,*)'======================'
      WRITE(6,*)'*** START WITH "SECOND STRING".'
      N = STCOPY(ASTRS(1,2),ASTR)
      WRITE(6,*)'STCOPY()=',N
      CALL STOUT(6,'ASTR NOW = ',ASTR)
      WRITE(6,*)'*** REPLACE "SECOND" WITH "THIRD".'
      N = STCTOA('SECOND',AOLD)
      N = STCTOA('THIRD',ANEW)
      N = STREPL1(ASTR,AOLD,ANEW,ASTR2)
      CALL STOUT(6,'AFTER STREPL1(), ASTR2 = ',ASTR2)
      WRITE(6,*)'*** REPLACE "STRING" WITH "SECOND PROGENY OF HELL".'
      N = STCTOA('STRING',AOLD)
      N = STCTOA('SECOND PROGENY OF HELL',ANEW)
      N = STREPL1(ASTR2,AOLD,ANEW,ASTR)
      CALL STOUT(6,'AFTER STREPL1(), ASTR = ',ASTR)
      WRITE(6,*)'*** REPLACE ALL E WITH Z CHARS.'
      N = STCTOA('E',AOLD)
      N = STCTOA('Z',ANEW)
      N = STREPLN(ASTR,AOLD,ANEW,99,ASTR2)
      WRITE(6,*)'STREPLN()=',N
      CALL STOUT(6,'AFTER STREPLN(), E TO Z, ASTR2 = ',ASTR2)
C
C---- TEST STRING ADD (CONCATENATE).
      WRITE(6,*)' '
      WRITE(6,*)'CONCATENATE TESTS'
      WRITE(6,*)'================='
      N = STCTOA(' ... WITH MORE ADDED.',ANEW)
      N = STADD(ASTR2,ANEW,ASTR)
      WRITE(6,*)'STADD()=',N
      CALL STOUT(6,'ASTR = ',ASTR)
C
C---- TEST STRING CHARACTER FUNCTIONS AND SLICING.
      WRITE(6,*)' '
      WRITE(6,*)'SINGLE CHARACTER LOCATE AND AT START/END TESTS.'
      WRITE(6,*)'==============================================='
      WRITE(6,*)'*** NBC=NON-BLANK CHAR, BC=BLANK CHAR.'
      WRITE(6,*)'*** TEST STRING IS: "NO BLANKS AT THE ENDS".'
      N = STCTOA('NO',AOLD)
      N = STCTOA('ENDS',ANEW)
      N = STCTOA('NO BLANKS AT THE ENDS',ASTR)
      WRITE(6,*)'1S NBC=',STNNBC(ASTR,1,0),' LAST NBC=',STLNBC(ASTR,1,0)
      WRITE(6,*)'1ST BC=',STNBC(ASTR,1,0),' LAST BC=',STLBC(ASTR,1,0)
      WRITE(6,*)'IS NO AT START? ',STATBEG(ASTR,AOLD)
      WRITE(6,*)'IS ENDS AT END? ',STATEND(ASTR,ANEW)
      WRITE(6,*)'*** TEST STRING IS: "   BLANKS AT THE ENDS ".'
      N = STCTOA('   BLANKS AT THE ENDS ',ASTR)
      WRITE(6,*)'1S NBC=',STNNBC(ASTR,1,0),' LAST NBC=',STLNBC(ASTR,1,0)
      WRITE(6,*)'1ST BC=',STNBC(ASTR,1,0),' LAST BC=',STLBC(ASTR,1,0)
      WRITE(6,*)'IS NO AT START? ',STATBEG(ASTR,AOLD)
      WRITE(6,*)'IS ENDS AT END? ',STATEND(ASTR,ANEW)
      IDX = STNNBC(ASTR,1,0)
      IEND = STNBC(ASTR,IDX,0)
      WRITE(6,*)' '
      WRITE(6,*)'STRING SLICING TESTS.'
      WRITE(6,*)'====================='
      WRITE(6,*)'*** SLICE FIRST BLANK SEPARATED WORD FROM TEST STRING.'
      IF( IEND .GT.0 .AND. IDX .GT. 0 )THEN
         N = STSLICX(ASTR,IDX,IEND,ANEW)
         N = STATOC(ANEW,CS)
         WRITE(6,*)'CUT OUT=',CS(1:N)
      ENDIF
C
C---- TEST CASE CONVERSION FUNCTIONS.
      WRITE(6,*)' '
      WRITE(6,*)'CASE CONVERSION TESTS.'
      WRITE(6,*)'======================'
      N = STCTOA('THIS STRING IS ALL UPPER CASE.',SORTS(1,1))
      N = STCTOA('^T^H^I^S ^I^S ^A^L^L ^L^O^W^E^R.',SORTS(1,2))
      N = STCTOA('THIS DOES NOT END',SORTS(1,3))
      N = STCTOA('IN A PERIOD.',SORTS(1,4))
      N = STCTOA('WELL I NEVER. STRIKE A LIGHT. GUV. OK?',SORTS(1,5))
      N = STCTOA('LAST ENDED WITH A ? DID THAT WORK?',SORTS(1,6))
      WRITE(6,*)'THE FOLLOWING FOUR LINES SHOULD BE UPPER CASE.'
      DO 111 I=1,4
         N = STUPRCS(SORTS(1,I),ASTR)
         N = STATOC(ASTR,CS)
         WRITE(6,*)CS(1:N)
 111  CONTINUE
      WRITE(6,*)'THE FOLLOWING FOUR LINES SHOULD BE LOWER CASE.'
      DO 112 I=1,4
         N = STLWRCS(SORTS(1,I),ASTR)
         N = STATOC(ASTR,CS)
         WRITE(6,*)CS(1:N)
 112  CONTINUE
      WRITE(6,*)'THE FOLLOWING SIX LINES SHOULD BE MIXED CASE.'
      N = 1
      DO 113 I=1,6
         N = STCASER(SORTS(1,I),ASTR,N)
         IDX = STATOC(ASTR,CS)
         WRITE(6,*)CS(1:IDX)
 113  CONTINUE
C
C---- LIMITED SHORT STRING SUPPORT.
C
      WRITE(6,*)' '
      WRITE(6,*)'SHORT STRING BUFFER TESTS (LIMITED SUPPORT).'
      WRITE(6,*)'============================================'
      WRITE(6,*)'*** CREATE FROM CHARACTERS AND COPY.'
      ISTAT = STCTOA( 'SHORT', ASHORT )
      ISTAT = STCOPY(ASHORT, ASHORT1)
      CALL STOUT(6, 'ASHORT1: ', ASHORT1)
C
C---- GENERATE 10 SHORT RANDOM ALPHANUMERIC STRINGS.
      WRITE(6,*)'*** CREATE 10 RANDOM STRINGS UP TO 8 CHARS LONG.'
      DO 40 I=1,10
         ISLEN = INT(8 * RANF()) + 1
         DO 41 J=1,ISLEN
            IF( J .EQ. 1 )THEN
               ICH = INT(25 * RANF() + 0.5) + 65
            ELSE
               IWHICH = INT(3 * RANF() + 0.5)
               IF( IWHICH .EQ. 1 )THEN
                  ICH = INT(25 * RANF() + 0.5) + 65
               ELSE IF( IWHICH .EQ. 2 )THEN
                  ICH = INT(9 * RANF() + 0.5) + 48
               ELSE
                  ICH = INT(25 * RANF() + 0.5) + 97
               ENDIF
            ENDIF
            SHSORTS(J,I) = ICH
 41      CONTINUE
         SHSORTS(ISLEN+1,I) = KSTEND
         N = STATOC(SHSORTS(1,I), CS)
         WRITE(6,*)CS(1:N)
 40   CONTINUE
C
C---- SORT STRING LINE NUMBERS INTO  ASCENDING STRING ORDER.
C---- DISPLAY THE SORTED STRINGS.
      WRITE(6,*)'*** SORT AND DISPLAY SORTED STRINGS AND INDICES.'
      CALL STSORTV(SHSORTS, 10, INDEXS, 10, .TRUE.)
      DO 52 I=1,10
         J = INDEXS(I)
         N = STATOC(SHSORTS(1,J), CS)
         WRITE(6,*)'I=',I,' J=',J,' ',CS(1:N)
 52   CONTINUE
C
      WRITE(6,*)' '
      WRITE(6,*)'TESTS COMPLETED.'
      WRITE(6,*)'================'
      STOP
      END
